<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Hello from zhongzilu]]></title>
      <url>http://zhongzilu.github.io/2117/01/01/Hello-from-zhongzilu/</url>
      <content type="html"><![CDATA[<h2 id="Hello-from-Zhongzilu"><a href="#Hello-from-Zhongzilu" class="headerlink" title="Hello from Zhongzilu"></a>Hello from Zhongzilu</h2><p>Welcome to BIT100.I’m zilu Zhong,an Android developer.Here is my blog website.I will post some blog articel which include technology,psychology and other notes in some time.In order to facilitating more people,I will sharing something which is be useful to everyone,because i believe that the knowledge more sharing more valuable.Sorry!My English is poor.So,Don’t be care.</p>
<p>欢迎来到我的网站，我是钟子路(zhongzilu)，是一个安卓开发者。这个网站是我的博客网站，我会不定时更新一些博客，博客类型包括技术博客，心理学笔记以及一些随笔，总之，是把我觉得对大家有用的东西分享出来，以便利更多人。我相信，知识越分享越有价值。</p>
<p><strong>作者</strong>：zhongzilu<br><strong>GitHub</strong>： <a href="https://github.com/zhongzilu" target="_blank" rel="external">https://github.com/zhongzilu</a><br><strong>简书</strong>: <a href="http://www.jianshu.com/users/0551ca89845b/latest_articles" target="_blank" rel="external">http://www.jianshu.com/users/0551ca89845b/latest_articles</a><br><strong>安卓社区</strong>: <a href="http://ask.android-studio.org/?/people/zhongzilu" target="_blank" rel="external">http://ask.android-studio.org/?/people/zhongzilu</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[JSON数据结构优化的突发奇想]]></title>
      <url>http://zhongzilu.github.io/2017/03/06/JSON%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BC%98%E5%8C%96%E7%9A%84%E7%AA%81%E5%8F%91%E5%A5%87%E6%83%B3/</url>
      <content type="html"><![CDATA[<h3 id="JSON数据结构优化的突发奇想"><a href="#JSON数据结构优化的突发奇想" class="headerlink" title="JSON数据结构优化的突发奇想"></a>JSON数据结构优化的突发奇想</h3><hr>
<p>@(标签)[数据结构，JSON，数据优化，性能优化，钟子路，zhongzilu，bit100]</p>
<p>JSON对于做网络软件开发的人来说再熟悉不过了，大多数开发者都是把数据封装成JSON格式，然后把数据从服务端传递到客户端。</p>
<p>但随着人们对信息的需求越来越多，要传递的数据也越来越大，网络和设备的开销也越来越大，对于用户来说，移动设备上请求大量的网络数据会造成昂贵的流量费用，同时，解析大量的JSON数据也难免会造成移动设备出现卡顿现象，因此，优化JSON数据就是很有必要的事情。</p>
<h4 id="那么，如何优化JSON数据呢？"><a href="#那么，如何优化JSON数据呢？" class="headerlink" title="那么，如何优化JSON数据呢？"></a>那么，如何优化JSON数据呢？</h4><p>假设这里有个实体类对象</p>
<pre><code>public class Person {
       private String name;
       private int age;
       ······
       public String getName();
       public void setName(String name);
       ·······
}
</code></pre><p>以往我们在传递对象集合数据的时候，通常是这样的</p>
<pre><code>{
&quot;Persons&quot;:[
{&quot;name&quot;:&quot;张三&quot;,&quot;age&quot;:16},
{&quot;name&quot;:&quot;李四&quot;,&quot;age&quot;:18},
{&quot;name&quot;:&quot;王二&quot;,&quot;age&quot;:17},
···········
]
}
</code></pre><p>因为这种方式符合面向对象的设计，同时也很方便封装，由于是通过对象的构造方法实现的，我们暂且称之为<code>对象构造数组</code>。</p>
<p>其实仔细观察分析，这一串JSON数据当中，有很多数据是重复的，比如<code>name</code>，<code>age</code>，不同的只是他们的值</p>
<p><strong>所以，我们其实可以这样来设计JSON格式，如下</strong></p>
<pre><code>{
&quot;Persons&quot;:{
&quot;name&quot;:[&quot;张三&quot;,&quot;李四&quot;,&quot;王二&quot;,.....],
&quot;age&quot;:[16,18,17,......]
}
}
</code></pre><p>相同属性的不同值用一个数组来保存，这样结构更加清晰，且能有效减少JSON的数据大小。</p>
<p>优化过后的JSON数据不仅能节省网络传输时间和网络流量费用，还能根据不同数据类型，采用不同的压缩算法，使压缩算法进行压缩时更加高效，例如GZip算法，同时，还能减少移动设备因解析数据造成的卡顿现象。</p>
<p>就目前看来这种方式只停留在想法阶段，还没有能够实现的解析库供使用，希望有热心人士能开发出一套高效的解析库，将想法变成现实(<em> ^_^ </em>)。</p>
<p>Thanks for watching!</p>
<blockquote>
<p>作者：钟子路<br>转载请注明出处：<a href="https://zhongzilu.github.io/2017/03/06/JSON数据结构优化的突发奇想/">https://zhongzilu.github.io/2017/03/06/JSON数据结构优化的突发奇想/</a></p>
</blockquote>
]]></content>
      
        
        <tags>
            
            <tag> 数据结构，JSON，数据优化，性能优化，钟子路，zhongzilu，bit100 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[随手拍分享]]></title>
      <url>http://zhongzilu.github.io/2017/02/16/%E9%9A%8F%E6%89%8B%E6%8B%8D%E5%88%86%E4%BA%AB/</url>
      <content type="html"><![CDATA[<h3 id="随手拍分享"><a href="#随手拍分享" class="headerlink" title="随手拍分享"></a>随手拍分享</h3><hr>
<p>昨天天气不错，就骑着自行车出去散步，然后来到了位于成都的环球中心附近，那里正在打造一个生态公园，名为【桂溪生态公园】。</p>
<p>我沿着一条小河走，河里的水很清澈，可惜没有鱼，这是美中不足的地方。</p>
<p>乘着天气好，阳光也很充足，时而吹点微风，有种春天到来的气息.河水随着微风荡漾起层层涟漪，涟漪反射着阳光，好一副和谐温暖的景象，我忍不住随手用手机拍了一张照片就揣上手机继续沿着河边走。</p>
<p>回来后查看手机里的相片，发现用来做壁纸还挺好看，所以就想分享给大家，下面是效果图：</p>
<p><img src="http://www.bit100.com/wp-content/uploads/2017/02/Screens-169x300.png" alt="Screens"></p>
<p><a href="http://www.bit100.com/wp-content/uploads/2017/02/Wallpaper.zip" target="_blank" rel="external">点击这里下载原图:Wallpaper.zip</a></p>
<p><strong>作者</strong>：<a href="http://www.bit100.com" target="_blank" rel="external">钟子路(zhongzilu)</a><br><strong>原文地址</strong>：<a href="http://www.bit100.com/%e9%9a%8f%e6%89%8b%e6%8b%8d%e5%88%86%e4%ba%ab/" target="_blank" rel="external">http://www.bit100.com/随手拍分享/</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[JS运算规则问题-下]]></title>
      <url>http://zhongzilu.github.io/2017/02/16/JS%E8%BF%90%E7%AE%97%E8%A7%84%E5%88%99%E9%97%AE%E9%A2%98-%E4%B8%8B/</url>
      <content type="html"><![CDATA[<h3 id="JS运算规则问题（下）"><a href="#JS运算规则问题（下）" class="headerlink" title="JS运算规则问题（下）"></a>JS运算规则问题（下）</h3><hr>
<h4 id="问题：请回答下图中最后输出结果为什么是false和1？"><a href="#问题：请回答下图中最后输出结果为什么是false和1？" class="headerlink" title="问题：请回答下图中最后输出结果为什么是false和1？"></a>问题：请回答下图中最后输出结果为什么是false和1？</h4><p><img src="http://www.bit100.com/wp-content/uploads/2017/02/Question.png" alt="Question"></p>
<p>想知道第一个输出结果为什么是false，请看这篇文章</p>
<blockquote>
<p><a href="http://www.bit100.com/js%E8%BF%90%E7%AE%97%E8%A7%84%E5%88%99%E9%97%AE%E9%A2%98%E4%B8%8A/" target="_blank" rel="external">http://www.bit100.com/js运算规则问题上/</a></p>
<h4 id="二、为什么-1-0输出结果为1？"><a href="#二、为什么-1-0输出结果为1？" class="headerlink" title="二、为什么[]?1:0输出结果为1？"></a>二、为什么[]?1:0输出结果为1？</h4><p>想知道为什么输出结果为1，那么需要先弄明白JavaScript三元运算符的实现标准。别怕，抓紧我的手，我带你装逼。</p>
</blockquote>
<p>三元运算符的运算规则是先判断问号<code>?</code>左边的表达式为<code>true</code>还是<code>false</code>，如果为<code>true</code>，则输出1，反之输出0。因此先把<code>[]</code>转换成<code>Boolean</code>类型，下面是标准。<br><img src="http://www.bit100.com/wp-content/uploads/2017/02/ToBoolean.png" alt="ToBoolean"></p>
<p>很明显，由于<code>[]</code>是数组，类型为<code>Object</code>，因此直接返回<code>true</code>。</p>
<p><strong>所以<code>[]?1:0</code>的输出结果当然就是<code>1</code>了。</strong></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[JS运算规则问题-上]]></title>
      <url>http://zhongzilu.github.io/2017/02/05/JS%E8%BF%90%E7%AE%97%E8%A7%84%E5%88%99%E9%97%AE%E9%A2%98-%E4%B8%8A/</url>
      <content type="html"><![CDATA[<h3 id="JS运算规则问题（上）"><a href="#JS运算规则问题（上）" class="headerlink" title="JS运算规则问题（上）"></a>JS运算规则问题（上）</h3><hr>
<h4 id="问题：请回答下图中最后输出结果为什么是false和1？"><a href="#问题：请回答下图中最后输出结果为什么是false和1？" class="headerlink" title="问题：请回答下图中最后输出结果为什么是false和1？"></a>问题：请回答下图中最后输出结果为什么是false和1？</h4><p><img src="http://www.bit100.com/wp-content/uploads/2017/02/Question.png" alt="Question"></p>
<h4 id="一、为什么-true输出结果为false"><a href="#一、为什么-true输出结果为false" class="headerlink" title="一、为什么[] == true输出结果为false?"></a>一、为什么[] == true输出结果为false?</h4><p>要想知道为什么输出false，那得先知道<code>==</code>是怎么进行比较的。<br><img src="http://www.bit100.com/wp-content/uploads/2017/02/the-equals-operator.png" alt="the equals operator"><br>上图是JavaScript的<code>==</code>操作符的实现标准，意思是在比较的时候，会把左右两边的表达式使用<code>GetValue()</code>进行转换，然后再用两者得到的值进行比较，即图上的<code>第5项</code>。</p>
<p>然后跟踪来到<strong>11.9.3</strong>章节，内容如下</p>
<p><img src="http://www.bit100.com/wp-content/uploads/2017/02/The-Abstract-Equality.png" alt="The Abstract Equality"></p>
<p>由于操作符右边的表达式为<code>Boolean</code>类型，所以满足上图中的<code>第7项</code>条件，需要先用<code>ToNumber()</code>方法来把布尔类型表达式转换为数字，我们都知道<code>true</code>转换为数字类型时，值为<code>1</code>。</p>
<p>然后左边的表达式是数组，类型为<code>Object</code>，因此满足<code>第9项条件</code>，于是再用<code>ToPrimitive()</code>方法转换左边的表达式。</p>
<p><strong>接下来看看<code>ToPrimitive()</code></strong><br><img src="http://www.bit100.com/wp-content/uploads/2017/02/ToPrimitive.png" alt="ToPrimitive"><br>因为需要转换的表达式为<code>Object</code>类型，所以采用最后一条规则。转换的结果是通过<code>[[DefaultValue]]</code>获取的<code>Object</code>的默认值。</p>
<p><strong>再来看看<code>[[DefaultValue]]</code></strong>的说明<br><img src="http://www.bit100.com/wp-content/uploads/2017/02/DefaultValue.png" alt="DefaultValue"><br>由于对象<code>Object</code>内部的<code>[[DefalutValue]]</code>的<code>hint</code>为<code>String</code>，所以用<code>toString</code>返回值，而数组<code>[]</code>使用<code>toString</code>方法，返回值为<code>&quot;&quot;</code><br><img src="http://www.bit100.com/wp-content/uploads/2017/02/toString.png" alt="toString"></p>
<p><strong>所以，一开始的<code>[] == true</code>的比较就相当于是<code>&quot;&quot; == 1</code>的比较，然后再回到一开始的 == 实现标准，即<a href="">The Abstact Equality Comparison Algoritem</a>章节的内容</strong></p>
<p>这个时候满足条件<code>第5项</code><br><img src="http://www.bit100.com/wp-content/uploads/2017/02/The-Abstract-Equality2.png" alt="The Abstract Equality"></p>
<p>需要把字符串<code>&quot;&quot;</code>转换为数字，由于是空字符串，所以转换后的值为<code>0</code></p>
<p>最终的结果就相当于是<strong><code>0 == 1</code></strong>，我们当然知道这两者不相等，所以返回值为<strong><code>false</code></strong></p>
<p>不知道各位看官看明白了吗？好了，就讲到这里，第二个请看下面这篇文章</p>
<blockquote>
<p><a href="http://www.bit100.com/js%e8%bf%90%e7%ae%97%e8%a7%84%e5%88%99%e9%97%ae%e9%a2%98%ef%bc%88%e4%b8%8b%ef%bc%89/" target="_blank" rel="external">http://www.bit100.com/js运算规则问题下/</a></p>
</blockquote>
<p>Thanks for watching!</p>
<p><strong>作者</strong>：<a href="http://www.bit100.com" target="_blank" rel="external">钟子路(zhongzilu)</a><br><strong>原文地址</strong>: <a href="http://www.bit100.com/js%E8%BF%90%E7%AE%97%E8%A7%84%E5%88%99%E9%97%AE%E9%A2%98%E4%B8%8A/" target="_blank" rel="external">http://www.bit100.com/JS运算规则问题(上)/</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[一行代码将RecyclerView的指定位置置顶显示]]></title>
      <url>http://zhongzilu.github.io/2017/01/17/%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81%E5%B0%86RecyclerView%E7%9A%84%E6%8C%87%E5%AE%9A%E4%BD%8D%E7%BD%AE%E7%BD%AE%E9%A1%B6%E6%98%BE%E7%A4%BA/</url>
      <content type="html"><![CDATA[<h3 id="一行代码将RecyclerView的指定位置置顶显示"><a href="#一行代码将RecyclerView的指定位置置顶显示" class="headerlink" title="一行代码将RecyclerView的指定位置置顶显示"></a>一行代码将RecyclerView的指定位置置顶显示</h3><p>标签 <code>Android</code> <code>RecyclerView</code> <code>scrollToPosition</code> <code>zhongzilu</code> <code>bit100</code></p>
<p>如果你有需求是将RecyclerView的指定位置置顶，那么这里有个最简单的方法，一行代码搞定，代码如下</p>
<pre><code>private void scrollToPosition(LayoutManager manager,int index){
    manager.scrollToPositionWithOffset(index,
        (int) manager.computeScrollVectorForPosition(index).y);
}
</code></pre><p>其中manager是给RecyclerView设置的布局管理器，index是指定的位置。<br>是不是很简单？</p>
<p><code>查看演示视频请到原文地址观看</code></p>
<p>点击下载源文件：<br><a href="http://www.bit100.com/wp-content/uploads/2017/01/ScrollToPositionTest.zip" target="_blank" rel="external">ScrollToPositionTest.zip</a></p>
<p><strong>作者</strong>：<a href="http://www.bit100.com" target="_blank" rel="external">钟子路(zhongzilu)</a><br><strong>原文地址</strong>: <a href="http://www.bit100.com/%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81%E5%B0%86recyclerview%E7%9A%84%E6%8C%87%E5%AE%9A%E4%BD%8D%E7%BD%AE%E7%BD%AE%E9%A1%B6%E6%98%BE%E7%A4%BA/" target="_blank" rel="external">http://www.bit100.com/一行代码将RecyclerView的指定位置置顶显示/</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[使用FFmpeg合成延时视频]]></title>
      <url>http://zhongzilu.github.io/2017/01/16/%E4%BD%BF%E7%94%A8FFmpeg%E5%90%88%E6%88%90%E5%BB%B6%E6%97%B6%E8%A7%86%E9%A2%91/</url>
      <content type="html"><![CDATA[<h3 id="使用FFmpeg合成延时视频"><a href="#使用FFmpeg合成延时视频" class="headerlink" title="使用FFmpeg合成延时视频"></a>使用FFmpeg合成延时视频</h3><hr>
<p>玩过<a href="https://en.wikipedia.org/wiki/Time-lapse_photography" target="_blank" rel="external">延时摄影</a>的童鞋都知道，所谓的延时摄影就是把很多张连续拍摄的照片合成一个视频文件</p>
<p><strong>要怎么把多张图片合成视频文件呢？</strong></p>
<p>开源免费的<a href="https://www.ffmpeg.org/" target="_blank" rel="external">FFmpeg</a>是不二之选</p>
<p>使用方法也很简单，只需要在你存放照片的目录下执行以下命令</p>
<pre><code class="bash"># -r 帧率，在这里取每秒 24 帧
# -s 视频分辨率，缩放比例与原照片分辨率比例一致
# -i 照片名字的编码格式，我的照片格式是 DSC*****.jpg 五位数字
# -start_number 照片的起始编号
# 最后输入视频名称，在这里是 video.mp4
$ ffmpeg -r 24 -s 1200x800 -i DSC%05d.jpg -start_number 2931 video.mp4
</code></pre>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[一道腾讯面试题的思考_到底谁会赢]]></title>
      <url>http://zhongzilu.github.io/2017/01/15/%E4%B8%80%E9%81%93%E8%85%BE%E8%AE%AF%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9A%84%E6%80%9D%E8%80%83-%E5%88%B0%E5%BA%95%E8%B0%81%E4%BC%9A%E8%B5%A2/</url>
      <content type="html"><![CDATA[<h3 id="一道腾讯面试题的思考-到底谁会赢"><a href="#一道腾讯面试题的思考-到底谁会赢" class="headerlink" title="一道腾讯面试题的思考_到底谁会赢"></a>一道腾讯面试题的思考_到底谁会赢</h3><hr>
<p>最近看到一道腾讯面试题，觉得很有意思。题干如下：</p>
<p>有甲乙两家伙用一个英语单词玩游戏（无聊的人还是很多的！！！）。两个人轮流进行，每个人每次从中删掉任意一个字母，如果剩余的字母序列是严格单调递增的（按字典序a &lt; b &lt; c &lt;….&lt;z，假设单词字母不区分大小写，也就是说，a与A算相等），则这个人胜利。假设两个人都足够聪明（即如果有赢的方案，都不会选输的方案 ），甲先开始，问他能赢么？</p>
<p>输入： 一连串英文小写字母，长度任意（当然要在计算机能承受的范围内）,保证最开始的状态不是一个严格单增的序列。</p>
<p>输出：1表示甲可以赢，0表示甲不能赢。</p>
<p>例如: 输入 bad， 则甲可以删掉b或者a,剩余的是ad或者bd，他就赢了，输出1。</p>
<p>又如: 输入 aaa， 则甲只能删掉1个a，乙删掉一个a,剩余1个a，乙获胜，输出0。</p>
<p>下面给出我用Java实现的算法，如果大家有其他的实现方法，欢迎跟帖和探讨。语言不限。</p>
<p>我的基本实现思路将给定的单词分成若干个单调递增的序列。然后按每个序列中包含单词个数多少进行递减排序，也就是说，排在前面的单调递增序列中包含的字母个数最少。然后由甲开始从排在前面的递增序列中选择一个字母。直到该递增序列中的字母全部被选中。然后继续从下一个递增序列选择字母。按着这样的方法做，直到剩下最后一个单调递增序列，随最后选择了倒数第二个单调递增序列中的最后一个字母，谁就赢了。</p>
<p>例如，单词hela，可以分为三个单调递增序列：h、a、el。从甲开始选择。</p>
<p>甲：h</p>
<p>乙：a</p>
<p>由于a是倒数第二个单调递增序列的最后一个字母，所以乙赢了。</p>
<p>对于单词money可以分成三个单调递增序列：mo、n、ey。排序后：n、mo、ey。</p>
<p>甲：n</p>
<p>乙：m</p>
<p>甲：o</p>
<p>所以甲赢。</p>
<p>具体的实现算法如下：</p>
<pre><code>public class Test {
    //  实现算法的方法，in为一个给定的单词
    public static int who(String in){
        // 基本思路就是找到该单词中所有递增的子序列，
        // 然后从字符最少的子序列甲乙轮回删除字母，
        // 直到还剩下最后一个子序列为止
        // 谁删除了最后一个字母，谁就赢了！

        //  in不能为null
        if(in == null)
            return 0;
        //  单词至少需要有一个字母
        if(in.length() == 0)
            return 0;
        in = in.toLowerCase();   //  都变成小写字母
        //  所有递增数列集合
        java.util.List&lt;StringBuilder&gt; ascendingList = 
            new java.util.ArrayList&lt;StringBuilder&gt;();
        char lastChar = in.charAt(0);

        // 存储当前递增的字符列表
        StringBuilder sb = new StringBuilder();
        sb.append(lastChar);

        for(int i = 1; i &lt; in.length(); i++){
            // 当前字符属于当前的递增序列
            if(in.charAt(i) &gt; lastChar){
                sb.append(in.charAt(i));
            }
            // 当前字符属于下一个递增序列，所以需要存储上一个递增序列
            else {
                ascendingList.add(sb);
                sb = new StringBuilder(); 
                sb.append(in.charAt(i));
            }
            lastChar = in.charAt(i);
        }
        if(sb.length() &gt; 0){
            ascendingList.add(sb);
        }
        // 下面就开始游戏了
        // 从甲开始删字母，从字符最少的递增序列开始删除第一个字母，直到之后只剩下一个递增序列为止，谁删除的最后一个之母，谁就赢了

        // 这里本应该判断如果单词本身就是递增序列，那么甲就win了，
        // 不过既然题目说没有这种情况，所以就注释掉了
        /*if(ascendingList.size() == 1){
            return 1;
        }*/

        java.util.Collections.sort(ascendingList, 
            new java.util.Comparator&lt;StringBuilder&gt;(){ 
            @Override
            public int compare(StringBuilder sb1, StringBuilder sb2){
                if(sb1.length() &gt; sb2.length()){
                    return 1;
                }
                else if(sb1.length() == sb2.length()){
                    return 0;
                }
                else {
                    return -1;
                }    
            }
        });

        int win = 0;   //  1代表甲赢，0代表乙赢

        while(ascendingList.size() &gt; 1){
            if(win == 0)
                win = 1;    //  甲开始
            else
                win = 0;    //  乙开始
            //  删除第一个递增序列的第一个字母，如果该递增序列
            ascendingList.get(0).delete(0, 1);
            if(ascendingList.get(0).length() == 0){
                ascendingList.remove(0);
            }
        }
        return win;
    }
    public static void main(String[] args){
        System.out.println(who(&quot;money&quot;));
    }
}
</code></pre>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[经典面试问题：Cookie被禁用了-Session还能用吗]]></title>
      <url>http://zhongzilu.github.io/2017/01/14/%E7%BB%8F%E5%85%B8%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98%EF%BC%9ACookie%E8%A2%AB%E7%A6%81%E7%94%A8%E4%BA%86-Session%E8%BF%98%E8%83%BD%E7%94%A8%E5%90%97/</url>
      <content type="html"><![CDATA[<h3 id="面试经典问题：Cookie被禁用了，Session还能用吗？"><a href="#面试经典问题：Cookie被禁用了，Session还能用吗？" class="headerlink" title="面试经典问题：Cookie被禁用了，Session还能用吗？"></a>面试经典问题：Cookie被禁用了，Session还能用吗？</h3><hr>
<p>面试的时候经常被问到Cookie禁用了，Session还能用吗？不同的公司给出的答案也有点不同，到底Cookie禁用了，Session还能用吗？</p>
<hr>
<h4 id="默认SESSION配置"><a href="#默认SESSION配置" class="headerlink" title="默认SESSION配置"></a>默认SESSION配置</h4><p>在<strong>默认的</strong>JSP、PHP配置中，SessionID是需要存储在Cookie中的，默认Cookie名为：</p>
<ul>
<li>PHPSESSIONID</li>
<li>JSESSIONID</li>
</ul>
<p>以下以PHP为例：</p>
<pre><code>1. 你第一次访问网站时，
2. 服务端脚本中开启了Session`session_start();`,
3. 服务器会生成一个不重复的SESSIONID 的文件`session_id();`，比如在`/var/lib/php/session`目录
4. 并将返回(Response)如下的HTTP头 `Set-Cookie:PHPSESSIONID=xxxxxxx`
5. 客户端接收到`Set-Cookie`的头，将`PHPSESSIONID`写入cookie
6. 当你第二次访问页面时，所有Cookie会附带的请求头(Request)发送给服务器端
7. 服务器识别`PHPSESSIONID`这个cookie，然后去session目录查找对应session文件，
8. 找到这个session文件后，检查是否过期，如果没有过期，去读取Session文件中的配置；如果已经过期，清空其中的配置
</code></pre><p>如果客户端禁用了Cookie，那<code>PHPSESSIONID</code>都无法写入客户端，Session还能用？</p>
<p>答案显而易见：<strong>不能</strong></p>
<blockquote>
<p>并且服务端因为没有得到<code>PHPSESSIONID</code>的cookie，会不停的生成<code>session_id</code>文件</p>
</blockquote>
<h4 id="取巧传递session-id"><a href="#取巧传递session-id" class="headerlink" title="取巧传递session_id"></a>取巧传递session_id</h4><p>但是这难不倒服务端程序，聪明的程序员想到，如果一个Cookie都没接收到，基本上可以预判客户端禁用了Cookie，那将session_id附带在每个网址后面(包括POST)，比如：</p>
<pre><code>GET http://www.xx.com/index.php?session_id=xxxxx
POST http://www.xx.com/post.php?session_id=xxxxx
</code></pre><p>然后在每个页面的开头使用<code>session_id($_GET[&#39;session_id&#39;])</code>，来强制指定当前<code>session_id</code></p>
<p>这样，答案就变成了：<strong>能</strong></p>
<blockquote>
<p>聪明的你肯定想到，那将这个网站发送给别人，那么他将会以你的身份登录并做所有的事情（目前很多订阅公众号就将openid附带在网址后面，这是同样的漏洞）。</p>
<p>其实不仅仅如此，cookie也可以被盗用，比如XSS注入，通过XSS漏洞获取大量的Cookie，也就是控制了大量的用户，腾讯有专门的XSS漏洞扫描机制，因为大量的QQ盗用，发广告就是因为XSS漏洞</p>
<p>所以Laravel等框架中，内部实现了Session的所有逻辑，并将<code>PHPSESSIONID</code>设置为<code>httponly</code>并加密，这样，前端JS就无法读取和修改这些敏感信息，降低了被盗用的风险。</p>
</blockquote>
<h4 id="Cookie在现代"><a href="#Cookie在现代" class="headerlink" title="Cookie在现代"></a>Cookie在现代</h4><p>禁用Cookie是 IE6 那个年代的事情，现在的网站都非常的依赖Cookie，禁用Cookie会造成大量的麻烦。</p>
<blockquote>
<p>在Flash还流行的年代，Flash在提交数据会经常出现用户无法找到的情况，其实是因为Flash在IE下是独立的程序，无法得到IE下的Cookie。</p>
<p>所以在Flash的<code>flash_var</code>中，一般都会指定当前的<code>session_id</code>，让Flash提交数据的时候，将这个<code>session_id</code>附带着提交过去</p>
<p>Chrome中使用 Flash沙箱 已经解决了cookie的问题，但是为了兼容IE，比如<code>swfupload</code>等flash程序都要求开发者附带一个<code>session_id</code></p>
</blockquote>
<h4 id="面试者的用意"><a href="#面试者的用意" class="headerlink" title="面试者的用意"></a>面试者的用意</h4><p>面试者出此题也是为了考察你对HTTP协议和服务器会话的理解。</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Android监听SearchView的展开和关闭事件]]></title>
      <url>http://zhongzilu.github.io/2016/12/15/Android%E7%9B%91%E5%90%ACSearchView%E7%9A%84%E5%B1%95%E5%BC%80%E5%92%8C%E5%85%B3%E9%97%AD%E4%BA%8B%E4%BB%B6/</url>
      <content type="html"><![CDATA[<h3 id="Android监听SearchView的展开和关闭事件"><a href="#Android监听SearchView的展开和关闭事件" class="headerlink" title="Android监听SearchView的展开和关闭事件"></a>Android监听SearchView的展开和关闭事件</h3><p>@(标签)[Android，SearchView，监听器，zhongzilu，bit100]</p>
<hr>
<p>最近在做搜索功能，虽然Github上有很多搜索控件的“轮子”，但我想要简单一点，于是使用了Android的<code>SearchView</code>。</p>
<p>一般在搜索完毕之后，关闭搜索框就应该恢复搜索前的数据，于是想监听<code>SearchView</code>的关闭事件，在关闭的时候进行恢复之前的显示内容。</p>
<p>首先发现有个<code>setOnCloseListener</code>，认为就是它了，结果搞了半天没有反应，然后就去查找原因</p>
<p>1 源码里面，实现<code>setOnCloseListener</code>里的<code>close()</code>法，有一个是清空输入框，也许会和SearchView的<code>setOnQueryTextListener</code>接口<code>onQueryTextSubmit(String query)</code>冲突</p>
<p>2 <code>setOnCloseListener</code>只能在3.2下才能有效，而原生的SeachView 是 <code>(SearchView) menuItem.getActionView()</code>;</p>
<p>那就从<code>menuItem</code>入手，发现了一个设置监听的方法<code>setOnActionExpandListener()</code></p>
<p>设置监听如下：</p>
<pre><code>if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.ICE_CREAM_SANDWICH) {
    menuItem.setOnActionExpandListener(
        new MenuItem.OnActionExpandListener() {
     @Override
     public boolean onMenuItemActionExpand(MenuItem item) {
         //TODO 展开事件
         return true;
     }

     @Override
     public boolean onMenuItemActionCollapse(MenuItem item) {
         //TODO 关闭事件
         return true;
     }
 });
} else {
   mSearchView.setOnCloseListener(
       new SearchView.OnCloseListener() {
           @Override
           public boolean onClose() {
              //TODO 关闭事件
               return false;
           }
       });
}
</code></pre><p><strong>作者</strong>：<a href="http://www.bit100.com" target="_blank" rel="external">钟子路(zhongzilu)</a><br><strong>原文地址</strong>: <a href="http://www.bit100.com/android%e7%9b%91%e5%90%acsearchview%e7%9a%84%e5%b1%95%e5%bc%80%e5%92%8c%e5%85%b3%e9%97%ad%e4%ba%8b%e4%bb%b6/" target="_blank" rel="external">http://www.bit100.com/Android监听SearchView的展开和关闭事件/</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[SwipeRefreshLayout进入页面自动刷新]]></title>
      <url>http://zhongzilu.github.io/2016/12/14/SwipeRefreshLayout%E8%BF%9B%E5%85%A5%E9%A1%B5%E9%9D%A2%E8%87%AA%E5%8A%A8%E5%88%B7%E6%96%B0/</url>
      <content type="html"><![CDATA[<h3 id="SwipeRefreshLayout进入页面自动刷新"><a href="#SwipeRefreshLayout进入页面自动刷新" class="headerlink" title="SwipeRefreshLayout进入页面自动刷新"></a>SwipeRefreshLayout进入页面自动刷新</h3><p>@(标签)[SwipeRefreshLayout，下拉刷新，Android，zhongzilu，bit100]</p>
<hr>
<p>通常在使用<code>SwipeRefreshLayout</code>控件的时候，是要通过下拉动作才能显示刷新动画和触发监听器<code>SwipeRefreshLayout.OnRefreshListener</code>的<code>onRefresh</code>方法。</p>
<p>要想一进Activity或Fragment就显示下拉刷新动画，<br>直接调用<code>mRefresh.setRefreshing(true)</code>是不会有刷新动画的。</p>
<p>可以使用以下方法</p>
<pre><code>mRefresh.post(new Runable() {
    @Override
    public void run(){
        mRefresh.setRefreshing(true);
    }
});
</code></pre><p>要关闭刷新</p>
<pre><code>mRefresh.setRefreshing(false);
</code></pre><p>不过，上面的方法是不会调用刷新监听器的<code>onRefresh()</code>方法的</p>
<p>要想一进入Activity或Fragment就显示刷新动画，并且调用刷新监听器的话，需要手动调用</p>
<pre><code>OnRefreshListener listener = new OnRefreshListener(){
    public void onRefresh(){
         //TODO
    }
};
SwipeRefreshLayout mRefresh = (SwipeRefreshLayout) findviewbyId(R.id.refresh);
mRefresh.setOnRefreshListener(listener);
</code></pre><p>在onCreate中:</p>
<pre><code>mRefresh.post(new Runable(){
    @Override
    public void run() {
        mRefresh.setRefreshing(true);
    }
});
listener.onRefresh()
</code></pre><p><strong>作者</strong>：<a href="http://www.bit100.com" target="_blank" rel="external">钟子路(zhongzilu)</a><br><strong>原文地址</strong>: <a href="http://www.bit100.com/swiperefreshlayout%e8%bf%9b%e5%85%a5%e9%a1%b5%e9%9d%a2%e8%87%aa%e5%8a%a8%e5%88%b7%e6%96%b0/" target="_blank" rel="external">http://www.bit100.com/SwipeRefreshLayout进入页面自动刷新/</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[如何在Windows或Linux-Ubuntu下开启和关闭PHP的错误显示功能]]></title>
      <url>http://zhongzilu.github.io/2016/12/13/%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E6%88%96Linux-Ubuntu%E4%B8%8B%E5%BC%80%E5%90%AF%E5%92%8C%E5%85%B3%E9%97%ADPHP%E7%9A%84%E9%94%99%E8%AF%AF%E6%98%BE%E7%A4%BA%E5%8A%9F%E8%83%BD/</url>
      <content type="html"><![CDATA[<h3 id="如何在Windows或Linux-Ubuntu-下开启和关闭PHP的错误显示功能"><a href="#如何在Windows或Linux-Ubuntu-下开启和关闭PHP的错误显示功能" class="headerlink" title="如何在Windows或Linux(Ubuntu)下开启和关闭PHP的错误显示功能"></a>如何在Windows或Linux(Ubuntu)下开启和关闭PHP的错误显示功能</h3><p>@(标签)[Windows，Linux，Ubuntu，PHP，zhongzilu，bit100]</p>
<hr>
<p>写过PHP程序的人都知道，要想知道自己写的PHP代码有没有问题，只有运行的时候才知道，这对于编写代码阶段很是繁琐，而且很多时候在自己的测试环境下没问题，放到真实环境的时候就出问题了，特别是有了一定用户之后，突然某天出问题了，用户看到的就是一个错误显示页面，这样的用户体验很不好。</p>
<p><strong>要想解决这样的问题，最好的方式就是打开PHP的错误和警告提示。</strong></p>
<blockquote>
<p><code>警告!!：</code><br><code>最好是在开发阶段和测试环境下启用，在正式环境下关闭或者将错误记录到日志</code></p>
</blockquote>
<h4 id="如何在Windows环境下开起PHP的错误显示？"><a href="#如何在Windows环境下开起PHP的错误显示？" class="headerlink" title="如何在Windows环境下开起PHP的错误显示？"></a>如何在Windows环境下开起PHP的错误显示？</h4><p>如果你是Windows平台，你只需要找到<code>php.ini</code>这个文件，通常这个文件就在你安装的Apache服务器的根目录下，如果你使用的是其他服务器，你可能需要搜索该文件</p>
<p><strong>1.打开<code>php.ini</code></strong>，利用查找功能找到以下代码</p>
<pre><code>display_errors = Off
</code></pre><p><strong>2.将它替换成</strong></p>
<pre><code>display_errors = On
</code></pre><p>保存文件之后，重启你的Apache服务器或其他的服务器，这就完了。</p>
<p>####如何在Linux(Ubuntu)环境下开起PHP的错误显示？<br>如果你是Ubuntu或Linux用户，同样是找到<code>php.ini</code>文件，通常会在<code>/etc/</code>目录下，然后就是查找和替换，方法和在Windows下一样</p>
<p>最后通过命令重启服务器，比如Apache服务器：</p>
<pre><code>sudo service apache2 restart
</code></pre><p>如果是nginx服务器</p>
<pre><code>sudo service nginx restart
</code></pre><p>这就完了！如果你依然没能解决问题，请移步到这篇文章</p>
<blockquote>
<p><a href="http://www.bit100.com/%e5%bc%80%e5%90%afphp%e9%94%99%e8%af%af%e6%8f%90%e7%a4%ba/" target="_blank" rel="external">开启PHP错误提示 — BIT100</a></p>
</blockquote>
<p>我是Zhongzilu，Thanks for watching!</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[开启PHP错误提示]]></title>
      <url>http://zhongzilu.github.io/2016/12/13/%E5%BC%80%E5%90%AFPHP%E9%94%99%E8%AF%AF%E6%8F%90%E7%A4%BA/</url>
      <content type="html"><![CDATA[<h2 id="开启PHP错误提示"><a href="#开启PHP错误提示" class="headerlink" title="开启PHP错误提示"></a>开启PHP错误提示</h2><p>@(标签)[PHP，错误提示，zhongzilu，bit100]</p>
<hr>
<p>想要在代码中显示PHP的<code>错误提示</code>吗？这篇文章应该对你有帮助</p>
<p>想要开启<code>错误报告</code>和<code>警告</code>功能，只需要在PHP标签中加上以下代码：</p>
<pre><code class="php">error_reporting(E_ALL^E_NOTICE);
ini_set(&#39;display_errors&#39;, &#39;On&#39;);
</code></pre>
<p>以上代码只是显示错误和警告，并没有建议提示，要显示所有的错误，只需要去掉<code>E_NOTICE</code></p>
<pre><code class="php">error_reporting(E_ALL);
ini_set(&#39;display_errors&#39;,&#39;On&#39;);
</code></pre>
<p>如果你仍然不能显示PHP的错误提示，请移步到下面这篇文章</p>
<blockquote>
<p><a href="http://www.bit100.com/%e5%a6%82%e4%bd%95%e5%9c%a8windows%e6%88%96linuxubuntu%e4%b8%8b%e5%bc%80%e5%90%af%e5%92%8c%e5%85%b3%e9%97%adphp%e7%9a%84%e9%94%99%e8%af%af%e6%98%be%e7%a4%ba%e5%8a%9f%e8%83%bd/" target="_blank" rel="external">如何在Windows或Linux(Ubuntu)下开启和关闭PHP的错误显示功能</a></p>
</blockquote>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS升级php5.3到5.5]]></title>
      <url>http://zhongzilu.github.io/2016/12/09/CentOS%E5%8D%87%E7%BA%A7php5-3%E5%88%B05-5/</url>
      <content type="html"><![CDATA[<h2 id="CentOS升级php5-3到5-5"><a href="#CentOS升级php5-3到5-5" class="headerlink" title="CentOS升级php5.3到5.5"></a>CentOS升级php5.3到5.5</h2><p>@(标签)[Linux，CentOS，PHP，5.3，5.5，zhongzilu，bit100]</p>
<hr>
<p>比特壹佰（www.bit100.com）使用的是Wordpress博客平台搭建。最近在后台升级了一下SEO插件，结果不能用了，提示我的PHP版本过低，要求是PHP版本必须为5.4以上，于是我就开始升级PHP的操作了。</p>
<p>由于yum仓库中的PHP版本最新为5.3.3，所以需要使用其他的源</p>
<p>安装Webtatic EL6 YUM源</p>
<pre><code>rpm -Uvh http://repo.webtatic.com/yum/el6/latest.rpm
</code></pre><p>在安装新版本PHP前，需要先移除原来的PHP<br><code>(在移除前，请确保你知道你对PHP做过哪些特殊配置，最好先备份一下配置文件)</code></p>
<pre><code>yum remove php*
</code></pre><p>然后安装PHP5.5版本，输入命令</p>
<pre><code>yum install php55w
</code></pre><p>安装好后可以查看一下版本</p>
<pre><code>php -v
</code></pre><p>然后安装常用的工具</p>
<pre><code>yum install php55w-pear php55w-odbc php55w-pdo php55w-gd php55w-mysql
</code></pre><p>查看自己安装了哪些PHP相关的包</p>
<pre><code>rpm -qa |grep php*
</code></pre><p>到这里PHP就已经升级完了，现在最新PHP版本是PHP7，升级PHP7得小心，可能会遇到很多坑，别问我为什么。Thanks for watching。</p>
<p><strong>作者</strong>：<a href="http://www.bit100.com" target="_blank" rel="external">钟子路(zhongzilu)</a><br><strong>原文地址</strong>: <a href="http://www.bit100.com/centos%e5%8d%87%e7%ba%a7php5-3%e5%88%b05-5/" target="_blank" rel="external">http://www.bit100.com/CentOS升级php5.3到5.5/</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[如何更改linux超级用户密码]]></title>
      <url>http://zhongzilu.github.io/2016/12/09/%E5%A6%82%E4%BD%95%E6%9B%B4%E6%94%B9linux%E8%B6%85%E7%BA%A7%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81/</url>
      <content type="html"><![CDATA[<h2 id="如何更改Linux超级用户密码"><a href="#如何更改Linux超级用户密码" class="headerlink" title="如何更改Linux超级用户密码"></a>如何更改Linux超级用户密码</h2><p>标签 <code>Linux</code> <code>超级用户</code> <code>root</code> <code>zhongzilu</code> <code>bit100</code></p>
<p>要更改Linux超级用户的密码很简单，不过这样做很危险，建议修改为较为复杂的密码或者使用<code>su root</code>命令来使普通用户临时拥有超级用户的权限</p>
<p>直接在命令行里输入</p>
<pre><code class="bash">sudo passwd
</code></pre>
<p>然后输入你的登陆密码，之后会提示输入新的UNIX密码，你就输入你想要修改的超级用户密码</p>
<p>之后提示重新输入新的UNIX密码，你再重复输入刚才输入的UNIX密码</p>
<p>之后会提示确认UNIX密码，你再重复一遍就可以了。</p>
<p>例如：</p>
<pre><code class="bash">zhongzilu@Ubuntu:~$ sudo passwd
[sudo] password for zhongzilu: 
输入新的UNIX密码： 
重新输入新的UNIX密码： 
确认输入新的UNIX密码：
passwd:已成功更新密码.
zhongzilu@Ubuntu:~$
</code></pre>
<p><strong>作者</strong>：<a href="http://www.bit100.com" target="_blank" rel="external">钟子路(zhongzilu)</a><br><strong>原文地址</strong>: <a href="http://www.bit100.com/%e5%a6%82%e4%bd%95%e6%9b%b4%e6%94%b9linux%e8%b6%85%e7%ba%a7%e7%94%a8%e6%88%b7%e5%af%86%e7%a0%81/" target="_blank" rel="external">http://www.bit100.com/如何更改Linux超级用户密码/</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[如何在Linux-Ubuntu上安装PHP-MySQL-Apache-LAMP]]></title>
      <url>http://zhongzilu.github.io/2016/12/09/%E5%A6%82%E4%BD%95%E5%9C%A8Linux-Ubuntu%E4%B8%8A%E5%AE%89%E8%A3%85PHP-MySQL-Apache-LAMP/</url>
      <content type="html"><![CDATA[<h2 id="如何在Linux-Ubuntu上安装PHP，MySQL和Apache（LAMP）"><a href="#如何在Linux-Ubuntu上安装PHP，MySQL和Apache（LAMP）" class="headerlink" title="如何在Linux/Ubuntu上安装PHP，MySQL和Apache（LAMP）"></a>如何在Linux/Ubuntu上安装PHP，MySQL和Apache（LAMP）</h2><p>标签 <code>Linux</code> <code>Ubuntu</code> <code>PHP</code> <code>MySQL</code> <code>Apache</code> <code>zhongzilu</code> <code>bit100</code></p>
<p>如果你是Linux新手，想在Linux上安装PHP、MySQL、Apache，最简单的方法就是通过命令行安装，命令如下：</p>
<h3 id="1-安装Apache"><a href="#1-安装Apache" class="headerlink" title="1.安装Apache"></a>1.安装Apache</h3><pre><code class="bash">sudo apt-get install apache2
</code></pre>
<h4 id="启动Apache"><a href="#启动Apache" class="headerlink" title="启动Apache"></a>启动Apache</h4><pre><code class="bash">sudo /etc/init.d/apache2 start
</code></pre>
<h4 id="停止Apache"><a href="#停止Apache" class="headerlink" title="停止Apache"></a>停止Apache</h4><pre><code class="bash">sudo /etc/init.d/apache2 stop
</code></pre>
<h4 id="重启Apache"><a href="#重启Apache" class="headerlink" title="重启Apache"></a>重启Apache</h4><pre><code class="bash">sudo /etc/init.d/apache2 restart
</code></pre>
<h3 id="2-安装PHP5"><a href="#2-安装PHP5" class="headerlink" title="2.安装PHP5"></a>2.安装PHP5</h3><pre><code class="bash">sudo apt-get install php5 libapache2-mod-php5
</code></pre>
<h3 id="3-安装MySQL服务端"><a href="#3-安装MySQL服务端" class="headerlink" title="3.安装MySQL服务端"></a>3.安装MySQL服务端</h3><pre><code class="bash">sudo apt-get install mysql-server
</code></pre>
<h3 id="4-检查"><a href="#4-检查" class="headerlink" title="4.检查"></a>4.检查</h3><p>以上都安装完后，重启Apache服务器</p>
<pre><code class="bash">sudo /etc/init.d/apache2 restart
</code></pre>
<p>然后打开浏览器，在地址栏输入：<code>http://localhost</code>，之后你应该会看到<code>It works</code>的字样，这就表示Apache服务器没问题</p>
<p>现在来检查PHP，默认情况下在命令行中输入</p>
<pre><code class="bash">cd  /var/www
</code></pre>
<p>然后将index.html文件更改为index.php</p>
<pre><code class="bash">mv index.html index.php
</code></pre>
<p><code>(注意中间的空格)</code></p>
<p>然后编辑index.php文件，输入如下代码：<br><code>(编辑的方法有多种，vi/vim/gedit等命令都可以,请自行搜索)</code></p>
<pre><code class="php">&lt;?php
    echo &quot;Hello Word!&quot;;
?&gt;
</code></pre>
<p>最后再打开浏览器，在地址栏输入：<code>http://localhost</code>，之后如果看到<code>Hello Word!</code>字样就表示PHP安装成功了。</p>
<p>是不是很简单，开始你的项目吧！</p>
<p><strong>作者</strong>：<a href="http://www.bit100.com" target="_blank" rel="external">钟子路(zhongzilu)</a><br><strong>原文地址</strong>: <a href="http://www.bit100.com/%e5%a6%82%e4%bd%95%e5%9c%a8linuxubuntu%e4%b8%8a%e5%ae%89%e8%a3%85phpmysql%e5%92%8capache%ef%bc%88lamp%ef%bc%89/" target="_blank" rel="external">http://www.bit100.com/如何在Linux/Ubuntu上安装PHP,MySQL和Apache(LAMP)</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[如何在Linux-Ubuntu上运行.chm文件]]></title>
      <url>http://zhongzilu.github.io/2016/12/09/%E5%A6%82%E4%BD%95%E5%9C%A8Linux-Ubuntu%E4%B8%8A%E8%BF%90%E8%A1%8C-chm%E6%96%87%E4%BB%B6/</url>
      <content type="html"><![CDATA[<h2 id="如何在Linux-Ubuntu上运行-chm文件"><a href="#如何在Linux-Ubuntu上运行-chm文件" class="headerlink" title="如何在Linux/Ubuntu上运行.chm文件"></a>如何在Linux/Ubuntu上运行.chm文件</h2><p>标签 <code>Linux</code> <code>Ubuntu</code> <code>.chm</code> <code>zhongzilu</code> <code>bit100</code></p>
<p>如果你想要在Linux或Ubuntu系统上运行.chm格式的文档文件，你可算来对地方了。<br>很简单，你可以直接在Ubuntu的软件中心里搜索xCHM，然后安装。或者你也可以使用命令行的方式：</p>
<pre><code class="bash">sudo apt-get install xchm
</code></pre>
<p>现在你就可以打开.chm格式的文档文件了。另外，还有其他的软件也可以，比如：<code>ChmSee</code>、<code>GnoCHM</code>、<code>CHMViewer</code>等，安装方法都是差不多了，你现在就可以去试试了。</p>
<p><strong>作者</strong>：<a href="http://www.bit100.com" target="_blank" rel="external">钟子路(zhongzilu)</a><br><strong>原文地址</strong>: <a href="http://www.bit100.com/%e5%a6%82%e4%bd%95%e5%9c%a8linuxubuntu%e4%b8%8a%e8%bf%90%e8%a1%8cchm%e6%96%87%e4%bb%b6/" target="_blank" rel="external">http://www.bit100.com/如何在Linux/Ubuntu上运行chm文件/</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[1024程序员节-向改变世界的程序员致敬]]></title>
      <url>http://zhongzilu.github.io/2016/10/24/1024%E7%A8%8B%E5%BA%8F%E5%91%98%E8%8A%82-%E5%90%91%E6%94%B9%E5%8F%98%E4%B8%96%E7%95%8C%E7%9A%84%E7%A8%8B%E5%BA%8F%E5%91%98%E8%87%B4%E6%95%AC/</url>
      <content type="html"><![CDATA[<h2 id="1024程序员节，向改变世界的程序员致敬"><a href="#1024程序员节，向改变世界的程序员致敬" class="headerlink" title="1024程序员节，向改变世界的程序员致敬"></a>1024程序员节，向改变世界的程序员致敬</h2><p>标签 <code>1024</code> <code>程序员节</code> <code>程序猿</code> <code>2016-10-24</code> <code>zhongzilu</code> <code>钟子路</code><br><img src="http://www.bit100.com/wp-content/uploads/2016/10/2556999-4736d514e21de24d.jpg" alt="1024，我们的节日"></p>
<h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>正值1024程序员节日来临之际，今天心血来潮，想写篇文章来为我们这些猿猿致敬，也算了却一个心愿，让我们这些猿猿们以自己从事的职业为豪为荣。</p>
<p><strong>可能我们的着装遭人吐槽，可能我们的玩笑经常别人听不出笑点，可能我们心照不宣的执着外人觉得莫名其妙，可能我们的举止身边的人觉得实在无趣，也可能我们在如今互联网火热的时候略带优越感的表象让人们越来越觉得我们是异类生物。。。</strong></p>
<p>但即使是这样，我希望你们对我们猿猿的态度是：“即使你不了解我们在做什么，但你们还是爱我们”。出于这种情结，我是程序员，我要为自己和猿猿们带盐！</p>
<p><img src="http://www.bit100.com/wp-content/uploads/2016/10/2556999-44a5fc8f212f5cae.jpg" alt="we are programmer"></p>
<h3 id="1-我们的着装"><a href="#1-我们的着装" class="headerlink" title="1.我们的着装"></a>1.我们的着装</h3><p>我们最常被吐槽的就是我们的穿着了，<strong>套头衫＋牛仔裤，最后再来个夹角拖鞋就齐活了</strong>。这是我们特立独行的标配，如果没有特别要求，请允许我们这样穿着，我们觉得会休闲自在，工作也会更有激情。</p>
<p>一个牛逼的程序员是根本没有时间打理自己外貌的。发型就要像爱因斯坦一样，顶着一脑袋鸡窝，凌乱蓬松美，给人随时能从头发里掏出一个鸡蛋的感觉。胡子一大把，彰显自信又从容，不近视则以，近视就要戴酒瓶底子那么厚的大眼镜，一种科研工作者的风格。</p>
<p><img src="http://www.bit100.com/wp-content/uploads/2016/10/2556999-74c29a0fef459e77.png" alt=""></p>
<h3 id="2-我们善于学习"><a href="#2-我们善于学习" class="headerlink" title="2.我们善于学习"></a>2.我们善于学习</h3><p>我们总是喜欢学习、尝试新事物，我们求知的欲望是相当强的。在互联网这个行业，技术的更新迭代速度很快，唯有不断学习和尝试，我们才能立于不败之地，<strong>人都是做自己原本不能胜任的事情中，才能快速成长</strong>。所以，<strong>不要让任何事情成为你不去学习的理由</strong>！，你学过的每一样东西，都会在你一生的某个时候派上用场的。</p>
<p><img src="http://www.bit100.com/wp-content/uploads/2016/10/2556999-9dd7b33133125919.jpg" alt=""></p>
<h3 id="3-我们善于解决问题"><a href="#3-我们善于解决问题" class="headerlink" title="3.我们善于解决问题"></a>3.我们善于解决问题</h3><p>我们每天打交道最多的就是bug了，<strong>bug虐我千百遍，我待bug如初恋</strong>。也许是解决问题后的满足感，正是因为这样，我们解决问题的能力超乎你想象。</p>
<h3 id="4-我们很单纯"><a href="#4-我们很单纯" class="headerlink" title="4.我们很单纯"></a>4.我们很单纯</h3><p>我们是一群单纯而又善良的猿。我们“只对技术不对人”，而且反驳对方观点，都是比较幽默的，不会“出口成脏”的。我们会不厌其烦地为客户改需求，改bug，<strong>相对于其他行业，我们少了勾心斗角，多了真诚</strong>，领导什么的也比较随和，工作氛围也比较自由。</p>
<h3 id="5-我们喜欢聆听"><a href="#5-我们喜欢聆听" class="headerlink" title="5.我们喜欢聆听"></a>5.我们喜欢聆听</h3><p>我们的大脑常常高速运转，这是好事也是坏事。好的一面是，我们可以听你讲你的问题好几个小时，坏的一面是我们常常走神，因为我们在想如何解决你的问题。但是起码，<strong>我们是喜欢聆听的</strong>。</p>
<h3 id="6-我们很有创造力"><a href="#6-我们很有创造力" class="headerlink" title="6.我们很有创造力"></a>6.我们很有创造力</h3><p>我们是一群富有创造力的猿，爱编程，爱晚起，偶尔也忙到深夜喜欢学习，努力工作，享受生活酷爱技术，创造出了一个又一个奇迹。大家玩地不亦乐乎的lol，改变世界交流方式的Facebook，亦或是让你足不出户就可以订餐或淘宝的软件都是出于我们的创造力，总之，<strong>我们为世界创造的价值</strong>。(猿们，感觉我越写越傲娇了)</p>
<p><img src="http://www.bit100.com/wp-content/uploads/2016/10/2556999-ca9cbfc20716f997.gif" alt=""></p>
<h3 id="7-我们善于分享"><a href="#7-我们善于分享" class="headerlink" title="7.我们善于分享"></a>7.我们善于分享</h3><blockquote>
<p>编程夜当午，手握小滑鼠。谁知编程辛，行行皆“心”苦；头昏不觉晓，使劲揉眼角。夜夜太辛苦，睡眠知多少；</p>
</blockquote>
<p>即使这样，我们还是乐此不疲地分享我们幸幸苦苦研究的成果，各种开源社区，博客都成为我们的常驻地。技术源于分享，当然，我们也会分享生活趣事，正是因为我们的无私，社会才会进步的更快。所以，建议大家<strong>开通博客之类的写点什么吧，好记性不如烂笔头，一来可以督促自己，二来锻炼自己表达能力，三来分享给别人</strong>。</p>
<h3 id="8-我们很细心"><a href="#8-我们很细心" class="headerlink" title="8.我们很细心"></a>8.我们很细心</h3><p>编译，调试，再编译，再调试，功能跑通，SVN提交代码<strong>（地震火灾，世界末日，也一定要先提交代码再行离开）</strong>，绝对不能让程序出乱子，没错，我们是一群细心的猿。</p>
<h3 id="9-和我们约会的好处"><a href="#9-和我们约会的好处" class="headerlink" title="9.和我们约会的好处"></a>9.和我们约会的好处</h3><blockquote>
<p>优点1：我们不会骗人；没有时间去拈花惹草，当然陪你的时间会相对少点。<br>优点2：我们很聪明，超级聪明。<br>优点3：惹你生气还请包容。<br>优点4：我们不会 bug 你，我们只会用一整天的时间debug代码。<br>优点5：我们会多门语言，是不是很好厉害！<br>优点6：当我们邀请你把玩我们的“小玩意”……你可别想歪，我就是想让你玩我儿时的小玩具，我们是一群可爱 又单纯的程序员。<br>优点7：拥有自己的活动空间，只要给我一台电脑，我从不干涉你的生活。<br>优点8 ：……</p>
</blockquote>
<p><img src="http://www.bit100.com/wp-content/uploads/2016/10/2556999-d5e9f91d085b5f58.jpg" alt=""></p>
<h3 id="10-活捉程序员的技巧"><a href="#10-活捉程序员的技巧" class="headerlink" title="10.活捉程序员的技巧"></a>10.活捉程序员的技巧</h3><blockquote>
<p>取萌妹纸饵料一只，放于程序猿经常出没的场所，待引起其注意后，掉头就跑，单纯的程序猿会紧跟着跑来，偶尔回头注意其动向，伺机将其捕获。如遇到挣扎可用亲吻麻痹之。 程序猿日常饲养比较简单，要求猿舍温暖，通风干爽，对猿舍网络状况要求较高。每日以适量萌饲喂之，注意取得程序猿的信任，培养感情，每周可适当带出门散步，程序猿对运动没有特殊要求。</p>
<p>不过需要特别注意的是,一次只能饲养一只程序猿,不要与其他萌妹纸一同饲养</p>
</blockquote>
<h3 id="11-值此1024程序员节，我们的愿望"><a href="#11-值此1024程序员节，我们的愿望" class="headerlink" title="11.值此1024程序员节，我们的愿望"></a>11.值此1024程序员节，我们的愿望</h3><p>作为一枚用代码改变世界，用智慧颠覆未来的程序员，居然还要加班加点透支生命？NO！我们应该给自己更多的关怀 ，1024这一天，我们应当放假或者拒绝强制 无效率 加班！</p>
<blockquote>
<p>勇敢对一切和加班有关的要求说NO!<br>拥抱女友<br>尽情在游戏的世界里徜徉！<br>早点休息，今天不加班！不晚睡！不熬夜！<br>……</p>
</blockquote>
<p><strong>特别提醒</strong>：<br>猿猿们切记不要加班</p>
<h3 id="12-附上程序员装逼指南"><a href="#12-附上程序员装逼指南" class="headerlink" title="12.附上程序员装逼指南"></a>12.附上程序员装逼指南</h3><p><img src="http://www.bit100.com/wp-content/uploads/2016/10/2556999-1476ba7634146df2.jpg" alt=""></p>
<h3 id="一-准备工作"><a href="#一-准备工作" class="headerlink" title="一.准备工作"></a>一.准备工作</h3><p>“工欲善其事必先利其器。”</p>
<blockquote>
<p>1.电脑不一定要配置高，但是双屏是必须的，越大越好，能一个横屏一个竖屏更好。一个用来查资料，一个用来写代码。总之要显得信息量很大，效率很高。</p>
<p>2.椅子不一定要舒服，但是一定要可以半躺着。</p>
<p>3.大量的便签，各种的颜色的，用来记录每天要完成的事务，多多益善。沿着电脑屏幕的边框，尽量贴满，显出有很多事情的样子。</p>
<p>4.工具书，orelly的，机械工业，电子工业什么的都可以，能英文就英文，不行影印版的也可以，反正越厚越好，而且千万不要放在书架上，一定要堆在桌上，半打开状。</p>
</blockquote>
<h3 id="二-从进门开始"><a href="#二-从进门开始" class="headerlink" title="二.从进门开始"></a>二.从进门开始</h3><blockquote>
<p>1.着装！着装！不管你是去实验室，或者去公司的大楼，在或者是小公司的民宅，或是自己创业的黑作坊；无论是春夏秋冬白天晚上刮风下雨电闪雷鸣台风 龙卷风，一个装b的程序员都要十分在意自己着装！这里只提出参考建议。初级装：衬衣+牛仔裤+休闲鞋。中级装：T恤+宽松短裤+拖鞋。高级装：背心+宽松 大花裤衩+人字拖。</p>
<p>2.得体的举止。在走廊以及任何形式的过道里，一定要双手插兜，走得像个痞子，至少要看起来有点反社会，如若不行，可走文弱天才型geek路线。。</p>
<p>3.如果有女性在你背后指指点点，小声嘀咕说这一定是一个技术男的时候，应该先低头，然后保持低头状态，缓缓回头，坏坏地蔑笑但是不要出声，然后快步前行。</p>
<p>4.进门后，一定不要跟任何人打招呼，笔直走向自己的位置，最多路过打一杯咖啡，千万不要有多余的动作，显示出自己的专注与心无旁骛。</p>
</blockquote>
<h3 id="三-坐下就不要再动了"><a href="#三-坐下就不要再动了" class="headerlink" title="三.坐下就不要再动了"></a>三.坐下就不要再动了</h3><p><img src="http://www.bit100.com/wp-content/uploads/2016/10/2556999-ff303d3070f68f14.jpg" alt=""></p>
<blockquote>
<p>1.坐下以后，姿势需要略微后仰，能翘着二郎腿最好了，然后在后仰的情况下低着头，以便看到屏幕，然后千万就不要再动了。</p>
<p>2.粗暴地把电脑前的大堆书推开一个口，然后摘下电脑上的一个便签，看一眼，不过3秒，可以开始coding了。</p>
<p>3.能不用IDE就不要用，实在装不了，无论IDE是什么，一定要调成DOS那种黑色背景的。</p>
<p>4.如果写前台界面，就不停地调试后台代码；如果写Java，就在里面混编C；如果写C，就在里面混编汇编。不光要coding，还要时不时的翻出一本什么英文的书翻一翻，看不懂就看看插图，然后扔到面前假装懂了继续coding。</p>
<p>5.什么看起来高端就用什么，不要管实用不实用。例如对C++：switch统统重构成多态；如果有指针，统统改成智能的；C++一定要自己写 template；数字是全部要替换成宏的名字能起多长就起多长；struct就不要出现了，如果出现，也一定要用attriburte修饰一 下；运算都是位操作的；操作符都是重载的；网络都是并发缓冲线程池的；int只用int32_t声明的;继承不用普通的，什么多继承虚继承 啊；helloworld也要写捕获异常的；后人一看代码，中间一堆关键字 extern,asm,auto,XXXXX_cast,volatile,explicit,register,template，让一般总在敲 int,if,else,for的小程序员顿时心生崇拜。</p>
<p>6.注释？算了吧。只有两个路线可以选：一，变量名起得巨长无比，看代码就和读英文文章一样顺畅，根本不需要加注释。 二，代码无比晦涩，加不加注释根本无影响。</p>
<p>7.千万不要用IM工具交流，千万不要问同事问题，显得自己没有水平，都是自己上网或者查书。</p>
<p>8.无论是同事间开玩笑或者发生任何群体性时间，不要抬头，更不要东张西望，即使地震火灾，也一定要先提交代码再行离开。</p>
</blockquote>
<h3 id="四-潇洒地离开"><a href="#四-潇洒地离开" class="headerlink" title="四.潇洒地离开"></a>四.潇洒地离开</h3><blockquote>
<p>1.人走，主机是千万千万不能关的，至少要跑个daily build，实在不行正在svn提交也勉强算过关。</p>
<p>2.书应该已经又堆到屏幕前了，千万不要整理，明天再来推开。</p>
<p>3.不强求最后一个走，但一定要所有的非程序员，什么市场啊前台啊pm啊都走光了，才可以走。</p>
<p>4.走得时候一定要率性，千万不要收拾任何东西，站起来，出门，好的，就这样。</p>
<p>5.如果今天一定要说句话的话，找到那个最苦逼的程序员，跟他说，你进度太慢了啊，不要老让我等你。</p>
</blockquote>
<h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>程序员没有沮丧、受伤、挫败感的时候么？有，而且可能今天你还哼着 “倍儿爽”，明天你就突然有 “我想哭但是哭不出来” 的苦闷。所以，<strong>需要你们在我们熬夜的时候送来关怀，寂寞的时候送来问候。总之，程序员的日子从没那么精彩，却又精彩处处可见。</strong></p>
<p><img src="http://www.bit100.com/wp-content/uploads/2016/10/2556999-d10a92b24efdea7e.jpg" alt=""></p>
<blockquote>
<p><strong>参考资料</strong>：《程序员装逼指南》<br>文／wblearn（简书作者）<br><strong>原文链接</strong>：<a href="http://www.jianshu.com/p/292da3de5bcd/comments/5069037#" target="_blank" rel="external">http://www.jianshu.com/p/292da3de5bcd/comments/5069037#</a><br><strong>本文链接</strong>：<a href="http://www.bit100.com/1024%E7%A8%8B%E5%BA%8F%E5%91%98%E8%8A%82%EF%BC%8C%E5%90%91%E6%94%B9%E5%8F%98%E4%B8%96%E7%95%8C%E7%9A%84%E7%A8%8B%E5%BA%8F%E5%91%98%E8%87%B4%E6%95%AC/" target="_blank" rel="external">http://www.bit100.com/1024程序员节，向改变世界的程序员致敬</a></p>
</blockquote>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[(已解决)ViewPager禁止预加载-使用Framgment的setUserVisibleHint导致的问题]]></title>
      <url>http://zhongzilu.github.io/2016/09/23/%E5%B7%B2%E8%A7%A3%E5%86%B3-ViewPager%E7%A6%81%E6%AD%A2%E9%A2%84%E5%8A%A0%E8%BD%BD-%E4%BD%BF%E7%94%A8Framgment%E7%9A%84setUserVisibleHint%E5%AF%BC%E8%87%B4%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<p>###(已解决)ViewPager禁用预加载，使用Fragment的setUserVisibleHint导致的问题</p>
<hr>
<p>不久前，写了一篇博客，<a href="http://www.bit100.com/viewpager禁止预加载，滑动到那个页面再加载网络数据/" target="_blank" rel="external">《ViewPager禁止预加载，滑动到那个页面再加载网络数据》</a>，根据这篇文章的做法，确实可以解决问题，但是当时我忽略了另一种情况，那就是在Activity中重复利用那个Fragment，<strong><code>结果Fragment没有加载数据，显示空白的</code></strong></p>
<p>这也是我在实际开发中遇到的，因为有个Fragment在ViewPager中显示，在另一个地方需要跳转到一个Activity，Activity显示内容和逻辑和Fragment里的一样，所以为了代码重用，就直接用Activity嵌套Fragment了，结果Activity显示空白，调试发现根本没运行到<code>setUserVisibleHint()</code>，在ViewPager中嵌套Fragment没有遇到这个问题。</p>
<p>于是我在Activity的<code>onResume()</code>中手动调用<code>setUserVisibleHint(true)</code>，结果报空指针，一查才知道，原来<code>setUserVisibleHint()</code>方法要<strong>优先于</strong>Fragment的<code>onCreateView()</code>，由于Fragment里的必要控件都还没有初始化，所以报空指针了</p>
<p>要解决这个问题，需要用到Fragment的<code>onHiddenChanged()</code>方法，</p>
<pre><code class="java">@Override
public void onHiddenChanged(boolean hidden) {
    super.onHiddenChanged(hidden);
    if (hidden &amp;&amp; isFirst){
        //在这里加载数据
        isFirst = false;
    }
}
</code></pre>
<p>然后在Activity中手动调用<code>onHiddenChanged(true)</code>，这样就能实现和<code>ViewPager + Fragment</code>的方式一样的效果了，在用户看到这个Fragment的时候再加载数据</p>
<p><strong>作者</strong>：<a href="htpp://www.bit100.com" target="_blank" rel="external">钟子路(zhongzilu)</a><br><strong>原文地址</strong>: <a href="http://www.bit100.com/%E9%97%AE%E9%A2%98viewpager%E7%A6%81%E7%94%A8%E9%A2%84%E5%8A%A0%E8%BD%BD%E4%BD%BF%E7%94%A8fragment%E7%9A%84setuservisiblehint%E5%AF%BC%E8%87%B4%E7%9A%84%E9%97%AE%E9%A2%98/" target="_blank" rel="external">http://www.bit100.com/问题ViewPager禁用预加载使用Fragment的setUserVisibleHint导致的问题/</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[ViewPager禁止预加载-滑动到那个页面再加载网络数据]]></title>
      <url>http://zhongzilu.github.io/2016/09/19/ViewPager%E7%A6%81%E6%AD%A2%E9%A2%84%E5%8A%A0%E8%BD%BD-%E6%BB%91%E5%8A%A8%E5%88%B0%E9%82%A3%E4%B8%AA%E9%A1%B5%E9%9D%A2%E5%86%8D%E5%8A%A0%E8%BD%BD%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE/</url>
      <content type="html"><![CDATA[<h2 id="ViewPager禁止预加载，滑动到那个页面在加载网络数据"><a href="#ViewPager禁止预加载，滑动到那个页面在加载网络数据" class="headerlink" title="ViewPager禁止预加载，滑动到那个页面在加载网络数据"></a>ViewPager禁止预加载，滑动到那个页面在加载网络数据</h2><p>@(标签)[Android, ViewPager, 预加载, setUserVisibleHint, 2016-09-18, zhongzilu, 钟子路]</p>
<hr>
<p>用过<code>Android ViewPager</code>的同学都知道，<code>ViewPager</code>预加载是3页，可以取消预加载，但是滑动页面会卡，不推荐。但如果不做限制，这样感觉又比较浪费资源，因为用户很可能只看了第一个，后面两个根本想不想看，结果还是加载了。更糟的是，如果你的Fragment在初始化时需要从网络加载大量的数据，这对资源消耗和用户体验都是不好的。</p>
<p><strong>那么有没有什么办法可以让用户在看到哪个页面的时候再去加载页面数据呢？</strong></p>
<p>答案当时有的，在使用的ViewPager的时候，通常我是采用的<code>ViewPager + Fragment</code>的方式，这个时候我们可以使用Fragment中的<code>setUserVisibleHint()</code>方法，直接在Fragment中覆写该方法：</p>
<pre><code class="java">@Override
public void setUserVisibleHint(boolean isVisibleToUser) {
    super.setUserVisibleHint(isVisibleToUser);
    if (isVisibleToUser){
        //在这里加载数据
    }
}
</code></pre>
<p>这样就能在Fragment显示出来的时候再去加载数据了，但是这样有个问题，每次加载Fragment的时候都会去重新加载一次，为了避免这个问题，我们用一个<code>boolean</code>类型的全局变量<code>isFirst</code>来表示只在第一次呈现的时候才加载数据，修改过后的代码如下：</p>
<pre><code class="java">private boolean isFirst = true;

@Override
public void setUserVisibleHint(boolean isVisibleToUser) {
    super.setUserVisibleHint(isVisibleToUser);
    if (isVisibleToUser &amp;&amp; isFirst){
        //在这里加载数据
        isFirst = false;
    }
}
</code></pre>
<p>这样就能满足使用ViewPager时禁用预加载的要求了！是不是很简单？</p>
<p><strong>作者</strong>：<a href="http://www.bit100.com" target="_blank" rel="external">钟子路(zhongzilu)</a><br><strong>原文地址</strong>: <a href="http://www.bit100.com/viewpager%E7%A6%81%E6%AD%A2%E9%A2%84%E5%8A%A0%E8%BD%BD%EF%BC%8C%E6%BB%91%E5%8A%A8%E5%88%B0%E9%82%A3%E4%B8%AA%E9%A1%B5%E9%9D%A2%E5%86%8D%E5%8A%A0%E8%BD%BD%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE/" target="_blank" rel="external">http://www.bit100.com/viewpager禁止预加载，滑动到那个页面再加载网络数据/</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[如何看待阿里抢月饼事件]]></title>
      <url>http://zhongzilu.github.io/2016/09/13/%E5%A6%82%E4%BD%95%E7%9C%8B%E5%BE%85%E9%98%BF%E9%87%8C%E6%8A%A2%E6%9C%88%E9%A5%BC%E4%BA%8B%E4%BB%B6/</url>
      <content type="html"><![CDATA[<h2 id="如何看待阿里抢月饼事件？"><a href="#如何看待阿里抢月饼事件？" class="headerlink" title="如何看待阿里抢月饼事件？"></a>如何看待阿里抢月饼事件？</h2><p>@(标签)[阿里巴巴, 月饼, 中秋节, 2016-09-12, zhongzilu, 钟子路]</p>
<hr>
<p>今天<br>在公司正愉快的敲着代码，突然电脑的右下角企鹅图标开始频繁闪动，我掐指一算，估计有什么大事要发生了（事实证明，这是我瞎编的），点开群消息，就看到一张醒目的图片<br><img src="http://www.bit100.com/wp-content/uploads/2016/09/4c70e600a3bd7e5a961dbbcc0ae58fb2_b.png" alt="Alt text"><br>我不禁被这几行犀利的文字所吸引，看完后顿生感叹：可惜了(liao)。</p>
<blockquote>
<p>Life is just like a box of moon cakes. You never know what you’re gonna get.<br>人生就像一盒月饼，你永远不知道下一个是不是五仁馅儿的</p>
</blockquote>
<p>原本只是一件小事，被大众这么一传播，就成了大事，我早说过程序猿就是个高危职业。</p>
<p>作为同行，我肯定不能“坐视不管”，于是在某乎上找到一篇贴：<strong><a href="https://www.zhihu.com/question/50600301" target="_blank" rel="external">如何看待阿里巴巴安全部门的月饼事件？</a></strong>，在看过该篇贴之后，我想在这里仅代表个人意见发表一些看法。</p>
<p>不得不说，阿里这次的决定实在是有点欠妥，这件事原本只是一件小事，或者说是Geek程序猿们开的一次玩笑，像这种事情，大多说公司都是内部警告处分就完事儿了，这样对外界来说，这件事就根本没发生过；对公司来说，也免去了不少的非议，而且最重要的是，那几个因此受到责罚的同事，会从中总结经验教训，并感谢领导们的“不杀之恩”。</p>
<p>从另外一个角度考虑，这几个同事使用技术手段来抢月饼，说明他们还是几个比较有想法的人，至少对自己从事的技术工作抱有好奇心，敢于突破常规，在我看来，只要不犯法，那就不是问题。</p>
<p>但阿里选择了不一样的处理方式，现在很难说这种处理方式是对是错，不过我们可以大胆的猜测一下</p>
<hr>
<p><strong>猜测：</strong><br><img src="http://www.bit100.com/wp-content/uploads/2016/09/4c70e600a3bd7e5a961dbbcc0ae58fb2_c.png" alt="Alt text"></p>
<p>从发帖内容上看，阿里辞退这几名员工的理由应该是<strong>使用了技术手段来达到个人目的，影响了公平性，这种行为是不诚实的行为，和阿里的价值观不符</strong>，所以被开除。</p>
<p>我不是阿里人，所以我也不知道阿里的价值观是什么，但在我看过的阿里的相关资料里，我记得阿里在成立初期经历过一次比较严重的问题事件，好像是淘宝上的商户欺诈，用户投诉的事件，阿里当时的做法并非像其他公司一样内部追责，对外咬死不承认，而是开诚布公，向公众说明事实真相，并说明将如何处理该问题。所以我猜测阿里的价值观就是如此，对待事件，开诚布公，说明原由，公开处理方式。</p>
<p>有人说这次的事件是阿里的又一次成功的营销手段，因为阿里用事实证明了：<strong>阿里月饼公司专供，好吃到内部抢到开除</strong>，我觉得用四个人换阿里月饼畅销还是挺划算得，这个梗我可以玩儿一年。</p>
<p>好像扯远了，回到话题</p>
<p>其实像这次9.12事件，完全有其他的处理方式，比如<br><img src="http://www.bit100.com/wp-content/uploads/2016/09/4c70e600a3bd7e5a961dbbcc0ae58fb2_e.png" alt="Alt text"><br><img src="http://www.bit100.com/wp-content/uploads/2016/09/4c70e600a3bd7e5a961dbbcc0ae58fb2_d.png" alt="Alt text"><br>这几位都说得很有道理，阿里作为一个技术型公司，在面对技术上的问题，应该更加慎重的解决，切不可鲁莽行事，这次的处理方式，还是有草率行事的嫌疑，这让有些人开始怀疑阿里的体制问题了，难道一个企业从小公司到大企业之后，都会变得这么急功近利，冷酷无情了吗？或者说，在天朝内的企业就是这样，我们出不来伟大的公司，因为我们伟大的只是领导和主义？</p>
<p>最后，我希望阿里能重视这件事情，妥善处理，毕竟有很多的目光在注视着，有看热闹的，有看门道的，也有看笑话的，说不定还有挖墙角的，小心为上！</p>
<blockquote>
<p><strong>作者</strong>：钟子路(zhongzilu)<br><strong>原文地址</strong>: <a href="http://www.bit100.com/%E5%A6%82%E4%BD%95%E7%9C%8B%E5%BE%85%E9%98%BF%E9%87%8C%E6%8A%A2%E6%9C%88%E9%A5%BC%E4%BA%8B%E4%BB%B6%EF%BC%9F/" target="_blank" rel="external">http://www.bit100.com/如何看待阿里抢月饼事件？/</a></p>
</blockquote>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[理想三旬]]></title>
      <url>http://zhongzilu.github.io/2016/09/12/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC/</url>
      <content type="html"><![CDATA[<h2 id="理想三旬"><a href="#理想三旬" class="headerlink" title="理想三旬"></a>理想三旬</h2><p>标签 <code>浓烟下的诗歌电台</code> <code>理想三旬</code> <code>陈鸿宇</code></p>
<p>15平米的出租房，一张床一张桌子，角落装行李的箱子似乎原封不动堆在那里，还是几个月之前的样子，那副裱起来的肖像画似乎特别显眼。</p>
<p>窗外风雨交加，手机今天早上跳出来的新闻说超级台风了，这个房子老旧的似乎摇摇晃晃马上要被吹坏一样。</p>
<p>房东是个独居老太太，衣着干净整洁，讲一口细软的南方普通话，消瘦很精明或者是说有些刻薄和吝啬。</p>
<p>守了6年的唱片公司最终还是入不敷出，他是这家公司的最后一个歌手，吃散伙饭的时候快四十的男人痛声大哭，他看着老板一句话也说不出来。</p>
<p>他几年前卖了攒钱买下的房子，坐上火车南下回到家乡，盘了一家餐厅，亲自装修，亲自三顾茅庐找厨师，亲自去买材料，甚至在后厨刷碗，但是剩下的钱也只够租下这个小屋子。</p>
<p>“我真的不喜欢你们这些说搞音乐的人，真的是不想租的啦，晚上八点以后不要让我听见唱歌啊，弹琴的声音，还有宠物也不要养。”</p>
<p>“知道了。”</p>
<p>他打开小冰箱，里面除了啤酒什么都没有，床头柜上有一包昨天吃剩的饼干，把剩下的塞到嘴里，只觉得浑身酸痛。</p>
<p>一个人干几个人的活，员工虽然有休息日，但是自己却只能够在这样自然灾害的天里面休息。</p>
<p>望了一眼墙角的吉他，琴箱上积了一层灰，他伸手拿够到它，然后用布把那些灰擦掉，然后想了想最终还是打开。</p>
<p>他今年三十岁了，古人说三十而立，这个年纪谈梦想似乎让人觉得可笑。这也是他不回家的原因，不过父母知道他开餐厅时候还是挺开心的，这是他姐姐和他说的。</p>
<p>学生时代一起做乐队的朋友大多都已经放弃了，极少数坚持下来的生活似乎也不怎么光鲜，至于之前工作认识的朋友似乎也因为某些原因疏远。他还比较幸运，他们说，至少曾经被人看见过，他觉得也是。看见他们因为业绩和上司闷闷不乐，他觉得自己虽然显得幼稚，但是却还是比较快乐。</p>
<p>音乐从指缝中流出，寂寞而美好，他也不知道怎么就弹出这首曲子。</p>
<p>因为这首歌他被老板看上，出了第一张也是唯一的一张唱片，红极一时，那时候走到街上似乎都是这首歌。</p>
<p>但是这首歌是他写给她女朋友的，那时候他们那么相爱，似乎永远都不会分开。在那个他们一起上学的北方城市，她最终嫁给了一个很平凡但是对她很好很踏实的男人，听说已经有了一个孩子。人有时候真的很善变，也很无情。喜欢的时候那么喜欢，不过忘记也似乎就只要一瞬间。</p>
<p>她给他画的画他还留着，二十多岁的样子和三十多岁的样子真的很不一样。这首歌现在唱和当初在舞台上唱的，似乎也不太一样。如果没有得到过，那么便不会觉得悲伤。</p>
<p>他突然很想抽烟，但是他已经戒烟很久了。他抱着吉他，窗外风雨更急了，路上看不见人影，满屋子的风雨呼啸声。</p>
<p>“笃笃笃。”突然听见敲门声。</p>
<p>他觉得奇怪，开门房东站在门口，手里拿着个饭桶。</p>
<p>“这么大的后生还怕台风啊，哭什么。”</p>
<p>他才发现自己竟然在留眼泪，连忙擦掉:“您怎么来了？有什么事情吗？”</p>
<p>“平时看你都是订外卖吃的，台风天人家外卖都不送了，刚好饭做多了给你一点。”房东把饭桶塞到他手里，“和我儿子一个样子，吃外卖还有方便面身体才不好，每天半夜咳嗽我觉都睡不着了。吃完放在我门口就好了。”</p>
<p>他有些懵，只是点了点头。</p>
<p>“真的是和我儿子一个样子，谢谢也不知道说的啊？”她有些生气的样子。</p>
<p>他又慌忙说了一句谢谢。</p>
<p>“嗯。”她点了点头，“不过你弹琴还是蛮好听的，唱歌也比他好，我还是蛮喜欢的。虽然是年轻人的歌，好听的话也可以适当多唱唱。”</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=31445772&auto=1&height=66"></iframe>

<blockquote>
<p><strong>作者</strong>：王木木<br><strong>原文地址</strong>: <a href="http://gushi.li/42" target="_blank" rel="external">http://gushi.li/42</a> </p>
</blockquote>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[(已解决)程序调用魅族系统裁剪之后直接闪退]]></title>
      <url>http://zhongzilu.github.io/2016/09/02/%E5%B7%B2%E8%A7%A3%E5%86%B3-%E7%A8%8B%E5%BA%8F%E8%B0%83%E7%94%A8%E9%AD%85%E6%97%8F%E7%B3%BB%E7%BB%9F%E8%A3%81%E5%89%AA%E4%B9%8B%E5%90%8E%E7%9B%B4%E6%8E%A5%E9%97%AA%E9%80%80/</url>
      <content type="html"><![CDATA[<h2 id="（已解决）程序调用魅族系统裁剪之后直接闪退"><a href="#（已解决）程序调用魅族系统裁剪之后直接闪退" class="headerlink" title="（已解决）程序调用魅族系统裁剪之后直接闪退"></a>（已解决）程序调用魅族系统裁剪之后直接闪退</h2><hr>
<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>几天前发布了一篇博客，是关于<strong><a href="http://www.bit100.com/%E7%A8%8B%E5%BA%8F%E8%B0%83%E7%94%A8%E9%AD%85%E6%97%8F%E7%B3%BB%E7%BB%9F%E8%A3%81%E5%89%AA%E4%B9%8B%E5%90%8E%E7%9B%B4%E6%8E%A5%E9%97%AA%E9%80%80/" target="_blank" rel="external">程序调用魅族系统裁剪之后直接闪退</a></strong>的问题，在网上找了很久之后也没有找到解决方法，于是决定去请教魅族官方的开发者，我先是在魅族社区里发帖提问，然后有幸在朋友的帮助下得到了魅族运营的联系方式，请求他帮忙联系一下魅族开发者，果然，在一周之后我得到了魅族开发者的回复，我在这里为魅族开发者<strong>点赞</strong>，感谢他们对待问题的态度，同时也为魅族客服<strong>点赞</strong>，感谢他们对用户提出的问题进行认真的回复。</p>
<p>好了，废话不多说，今天主要讲讲对于这个问题的解决方案。</p>
<h3 id="魅族官方社区的回复截图"><a href="#魅族官方社区的回复截图" class="headerlink" title="魅族官方社区的回复截图"></a>魅族官方社区的回复截图</h3><p><img src="http://www.bit100.com/.zhongzilu/image/meizu_Bug_solution_Screenshot.png" alt="Bug solution screenshot"><br>根据回复，我们可以得知，魅族在系统层就处理了 我们经常遇到的 因裁剪图片过大可能会导致内存溢出的问题，这一点还是挺人性化的，再次为魅族系统开发者点赞。</p>
<p>回复中共提供了三种解决方案，通过对比，我们把这三种方案进行结合。</p>
<p>解决方案代码如下：</p>
<pre><code class="java">/**
 * 对选择的图片进行裁剪
 * @param uri 图片uri
 * @param outputX 输出图片宽度
 * @param outputY 输出图片高度
 * @param requestCode 请求码
 */
public void cropImage(Uri uri, int outputX, int outputY, int requestCode) {
    Intent intent = 
        new Intent(&quot;com.android.camera.action.CROP&quot;);
    intent.setDataAndType(uri, &quot;image/*&quot;);
    intent.putExtra(&quot;crop&quot;, &quot;true&quot;);
    intent.putExtra(&quot;aspectX&quot;, 1);
    intent.putExtra(&quot;aspectY&quot;, 1);
    intent.putExtra(&quot;outputX&quot;, outputX);
    intent.putExtra(&quot;outputY&quot;, outputY);
    intent.putExtra(&quot;noFaceDetection&quot;, true);
    intent.putExtra(&quot;return-data&quot;, true);
    //这里增加第三种方案的代码
    intent.putExtra(&quot;return-path-if-too-large&quot;, true);
    intent.putExtra(&quot;scale&quot;, true);
    //这里生成裁剪过后的图片的保存路径
    File file = new File(
        getApplicationContext().getExternalCacheDir(),
        UUID.randomUUID().toString());

    intent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(file));
    intent.putExtra(&quot;outputFormat&quot;, 
        Bitmap.CompressFormat.JPEG.toString()); //输入文件格式
    startActivityForResult(intent, requestCode);

    //把自定义的保存路径保存到全局变量中，方便其他地方调用
    this.mCropImageUri = Uri.fromFile(file);
}
</code></pre>
<p>覆写的onActivityResult代码如下：</p>
<pre><code class="java">@Override
protected void onActivityResult(int requestCode, int resultCode, Intent data) {

    switch (requestCode) {

        //裁剪图片之后的处理
        case REQUEST_CROP_CODE:
            if (resultCode == RESULT_OK &amp;&amp; data != null){
                Uri uri = data.getData();
                if (uri != null) {
                    this.mImageRealPath = uri.getPath();
                    LogUtil.d(&quot;ImageRealPath==&gt;&quot;, mImageRealPath);
                    //更换视频封面
                    img_video_mask.setImageURI(uri);

                } else {
                    //在其他机型上裁剪过后的图片uri会包含在data中，
                    //通过data.getData()可以获取到裁剪过后的图片uri
                    //但在魅族机型上，data.getData获取的uri为null
                    //因此需要使用我们在调用裁剪时生成的保存路径
                    this.mImageRealPath = 
                        mCropImageUri.getPath();
                    LogUtil.d(TAG, 
                        &quot;onActivityResult: ImageRealPath==&gt;&quot; 
                        + mImageRealPath);

                    img_video_mask.setImageURI(mCropImageUri);

                }
            }
            break;

     super.onActivityResult(requestCode, resultCode, data);
 }
</code></pre>
<p><strong>作者</strong>：zhongzilu<br><strong>原文地址</strong>: <a href="http://www.bit100.com/%EF%BC%88%E5%B7%B2%E8%A7%A3%E5%86%B3%EF%BC%89%E7%A8%8B%E5%BA%8F%E8%B0%83%E7%94%A8%E9%AD%85%E6%97%8F%E7%B3%BB%E7%BB%9F%E8%A3%81%E5%89%AA%E4%B9%8B%E5%90%8E%E7%9B%B4%E6%8E%A5%E9%97%AA%E9%80%80/" target="_blank" rel="external">http://www.bit100.com/（已解决）程序调用魅族系统裁剪之后直接闪退/</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[程序调用魅族系统j裁剪之后直接闪退]]></title>
      <url>http://zhongzilu.github.io/2016/08/30/%E7%A8%8B%E5%BA%8F%E8%B0%83%E7%94%A8%E9%AD%85%E6%97%8F%E7%B3%BB%E7%BB%9Fj%E8%A3%81%E5%89%AA%E4%B9%8B%E5%90%8E%E7%9B%B4%E6%8E%A5%E9%97%AA%E9%80%80/</url>
      <content type="html"><![CDATA[<h2 id="程序调用系统裁剪之后直接闪退"><a href="#程序调用系统裁剪之后直接闪退" class="headerlink" title="程序调用系统裁剪之后直接闪退"></a>程序调用系统裁剪之后直接闪退</h2><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>我原本是想实现更换头像的功能，程序调用系统相册选取图片，选取图片后直接进行裁剪，我在<code>Activity</code>里覆写了<code>onActivityResult</code>方法，然后在该方法里获取返回的图片数据，结果要么是根本没执行到<code>onActivityResult</code>方法里，要么是获取不到数据，在其他手机上没出现这个问题，唯独在魅族的手机上会有这个问题，我想请问一下魅族的开发者大佬们，这个问题该怎么解决呢？</p>
<h3 id="具体描述"><a href="#具体描述" class="headerlink" title="具体描述"></a>具体描述</h3><p>有两种情况，第一种没执行到<code>onActivityResult</code></p>
<p>裁剪请求代码如下：</p>
<pre><code class="java">/**
  * 对选择的图片进行裁剪
  * @param uri 图片uri
  * @param outputX 输出图片宽度
  * @param outputY 输出图片高度
  * @param requestCode 请求码
  */
 public void cropImage(Uri uri, int outputX, int outputY,
  int requestCode) {
     Intent intent = 
         new Intent(&quot;com.android.camera.action.CROP&quot;);
     intent.setDataAndType(uri, &quot;image/*&quot;);
     intent.putExtra(&quot;crop&quot;, &quot;true&quot;);
     intent.putExtra(&quot;aspectX&quot;, 1);
     intent.putExtra(&quot;aspectY&quot;, 1);
     intent.putExtra(&quot;outputX&quot;, outputX);
     intent.putExtra(&quot;outputY&quot;, outputY);
     intent.putExtra(&quot;noFaceDetection&quot;, true);
     intent.putExtra(&quot;return-data&quot;, true);
     intent.putExtra(&quot;scale&quot;, true);

     File file = new File(
             getApplicationContext().getExternalCacheDir(),
             UUID.randomUUID().toString()
     );

     intent.putExtra(MediaStore.EXTRA_OUTPUT, 
         Uri.fromFile(file));
     intent.putExtra(&quot;outputFormat&quot;, 
         Bitmap.CompressFormat.JPEG.toString()); 
     startActivityForResult(intent, requestCode);
 }
</code></pre>
<p>覆写的onActivityResult代码如下：</p>
<pre><code class="java">@Override
protected void onActivityResult(int requestCode, int resultCode, Intent data) {

    switch (requestCode) {

         //裁剪图片之后的处理
        case REQUEST_CROP_CODE:
            if (resultCode == RESULT_OK &amp;&amp; data != null){
                Uri uri = data.getData();
                if (uri != null) {
                    this.mImageRealPath = uri.getPath();
                    LogUtil.d(&quot;ImageRealPath==&gt;&quot;, mImageRealPath);
                    //更换图片
                    img_video_mask.setImageURI(uri);
                }
            }
            break;
     }

     super.onActivityResult(requestCode, resultCode, data);
 }
</code></pre>
<blockquote>
<p>这种情况就是没法运行到<code>onActivityResult</code>方法里，裁剪图片之后，点击确定按钮，就直接闪退了，在debug模式下都没办法</p>
</blockquote>
<p>第二种情况是能运行到<code>onActivityResult</code>里，但获取不了返回数据</p>
<p>裁剪请求代码稍微有点区别，具体如下：</p>
<pre><code class="java">/**
 * 对选择的图片进行裁剪
 * @param uri 图片uri
 * @param outputX 输出图片宽度
 * @param outputY 输出图片高度
 * @param requestCode 请求码
 */
public void cropImage(Uri uri, int outputX, int outputY, int requestCode) {
    Intent intent = new Intent(&quot;com.android.camera.action.CROP&quot;);
    intent.setDataAndType(uri, &quot;image/*&quot;);
    intent.putExtra(&quot;crop&quot;, &quot;true&quot;);
    intent.putExtra(&quot;aspectX&quot;, 1);
    intent.putExtra(&quot;aspectY&quot;, 1);
    intent.putExtra(&quot;outputX&quot;, outputX);
    intent.putExtra(&quot;outputY&quot;, outputY);
    intent.putExtra(&quot;noFaceDetection&quot;, true);
    intent.putExtra(&quot;return-data&quot;, true);
    intent.putExtra(&quot;scale&quot;, true);
// File file = new File(getApplicationContext().getExternalCacheDir(),UUID.randomUUID().toString());
// intent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(file));
    intent.putExtra(&quot;outputFormat&quot;, Bitmap.CompressFormat.JPEG.toString()); //输入文件格式
    startActivityForResult(intent, requestCode);
}
</code></pre>
<p>覆写的<code>onActivityResult</code>也稍微有点变化，具体代码如下：</p>
<pre><code class="java">//裁剪图片之后的处理
case REQUEST_CROP_CODE:
   if (resultCode == RESULT_OK &amp;&amp; data != null){
       Uri uri = data.getData();
       if (uri != null) {
           this.mImageRealPath = uri.getPath();
           LogUtil.d(&quot;ImageRealPath==&gt;&quot;, mImageRealPath);
           //更换图片
           img_video_mask.setImageURI(uri);

       } else {
           Bundle bundle = data.getExtras();
           if (bundle != null) {
               String filePath = bundle.getString(&quot;filePath&quot;);
               if (!TextUtils.isEmpty(filePath)){
                   img_video_mask.setImageURI(
                       Uri.parse(filePath));
               }
            }
        }
    }
    break;
</code></pre>
<p><code>之所以改成这样的写法，是因为我在网上找到一篇文章在说这个问题，并给出一个解决方案，我根据他的解决方案，依然没有解决问题。地址：http://www.cnblogs.com/over140/archive/2012/12/17/2821874.html</code></p>
<p>在Debug模式下，截图如下<br><img src="http://www.bit100.com/wp-content/uploads/2016/08/Debug-Screenshot.png" alt="Debug Screenshot"></p>
<p>通过截图可以看到<code>uri</code>和<code>filePath</code>都为<code>null</code>，实在没办法，所以来请教一下魅族的开发大佬们，希望能尽快收到你们的回复，小弟在此表示万分感谢！</p>
<p><strong>作者</strong>：zhongzilu<br><strong>原文地址</strong>： <a href="http://www.bit100.com/%E7%A8%8B%E5%BA%8F%E8%B0%83%E7%94%A8%E9%AD%85%E6%97%8F%E7%B3%BB%E7%BB%9F%E8%A3%81%E5%89%AA%E4%B9%8B%E5%90%8E%E7%9B%B4%E6%8E%A5%E9%97%AA%E9%80%80/" target="_blank" rel="external">http://www.bit100.com/程序调用魅族系统裁剪之后直接闪退/</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[浓烟下的诗歌电台-陈鸿宇]]></title>
      <url>http://zhongzilu.github.io/2016/06/22/%E6%B5%93%E7%83%9F%E4%B8%8B%E7%9A%84%E8%AF%97%E6%AD%8C%E7%94%B5%E5%8F%B0-%E9%99%88%E9%B8%BF%E5%AE%87/</url>
      <content type="html"><![CDATA[<h2 id="浓烟下的诗歌电台-陈鸿宇"><a href="#浓烟下的诗歌电台-陈鸿宇" class="headerlink" title="浓烟下的诗歌电台-陈鸿宇"></a>浓烟下的诗歌电台-陈鸿宇</h2><p>标签 <code>浓烟下的诗歌电台</code> <code>安静</code> <code>吉他</code> <code>低沉</code> <code>理想</code> <code>行路</code> <code>早春</code> <code>钟子路</code> <code>网易云音乐</code></p>
<p>读一本书，是与作者心灵上的沟通，听一首音乐也是。今天我给大家带来几首陈鸿宇的歌，听他的歌，什么烦恼，浮躁的心，都能烟消云散。</p>
<blockquote>
<p><strong>浓烟下的诗歌</strong></p>
<p>浓烟下不过是南方三四月的梅雨时节，<br>早春的树已按耐不住寂寞于冬末出芽，<br>你只是经过而我却再也难忘你的容颜，<br>理想三旬依旧年轻却忘了黑发已不再，<br>霓虹深处灯红酒绿痴男怨女忘情歌唱，<br>途中收到来信一封心中窃喜你还依旧，<br>遗漏了我们一路走来心中畅想的行歌。</p>
</blockquote>
<h3 id="理想三旬"><a href="#理想三旬" class="headerlink" title="理想三旬"></a>理想三旬</h3><blockquote>
<p>他说，理想已存在于月有三旬之前，七月融化在不经意的罅(xia)隙，十二月结成冰，被牢牢抓住在时间里，人有三旬，也不过是右手握着缄口不言的聚散，左手长出脉络骄横的命运，然后山崖无尽，热望不熄，最终死生寻常，悲喜成疾。</p>
</blockquote>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=31445772&auto=1&height=66"></iframe>

<h3 id="途中"><a href="#途中" class="headerlink" title="途中"></a>途中</h3><blockquote>
<p>独飞时慕侣，寡合乍孤音</p>
</blockquote>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=34380395&auto=0&height=66"></iframe>

<h3 id="行歌"><a href="#行歌" class="headerlink" title="行歌"></a>行歌</h3><blockquote>
<p>负者歌于途，行者休于树</p>
</blockquote>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=31445771&auto=0&height=66"></iframe>

<h3 id="早春的树"><a href="#早春的树" class="headerlink" title="早春的树"></a>早春的树</h3><blockquote>
<p>偶然惊鸿一瞥，我心怦然而动，成为一棵早春的树。为你我愿折筋断骨，融入你每一寸生活，只盼守你年年月月，可我不过早春一棵树，只能立于门前，希冀你某天再经过我的荒芜</p>
</blockquote>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=35476188&auto=0&height=66"></iframe>

<h3 id="船子"><a href="#船子" class="headerlink" title="船子"></a>船子</h3><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=415793152&auto=0&height=66"></iframe>

<h3 id="你只是经过"><a href="#你只是经过" class="headerlink" title="你只是经过"></a>你只是经过</h3><blockquote>
<p>她出现，又消失，一如日升日落，抑或任何转瞬即逝的事物。就像我们的生活，我们出现，然后我们又消失，我们对一些人是如此重要，但我们只是经过。</p>
</blockquote>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=36080207&auto=0&height=66"></iframe>

<h3 id="来信"><a href="#来信" class="headerlink" title="来信"></a>来信</h3><blockquote>
<p>窗外下起了小雨，没有你消息的夜是否继续漫长，前些天你说要寄给我一张明信片，我等邮戳漂过远方，等你慢慢变成我的习惯，心里为你留了一扇门，很难再关上，逐渐发现自己有些软弱，大概是惯性吧，像等你的日子，让我无能为力。</p>
</blockquote>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=399340140&auto=0&height=66"></iframe>

<h3 id="霓虹深处"><a href="#霓虹深处" class="headerlink" title="霓虹深处"></a>霓虹深处</h3><blockquote>
<p>这一刻，我来过的意义，而后恍悟，无谓再提。</p>
</blockquote>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=41642352&auto=0&height=66"></iframe>

<h3 id="浓烟下"><a href="#浓烟下" class="headerlink" title="浓烟下"></a>浓烟下</h3><blockquote>
<p>歌声沉痛落地再轻浮地扬起，动人的永远只是半成品，和你，歌声沉痛落地再轻浮地扬起，而我能给的，恰好大都无意义。</p>
</blockquote>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=41655197&auto=0&height=66"></iframe>

<blockquote>
<p>浓烟下的影子<br>霓虹深处的你<br>都只是经过<br>途中的一处风景</p>
<p>早春有树<br>船有鱼群<br>行歌吟完<br>再读来信<br>理想已三旬</p>
</blockquote>
<hr>
<blockquote>
<p>作者：zhongzilu<br>原文地址: <a href="http://www.bit100.com/浓烟下的诗歌电台" target="_blank" rel="external">http://www.bit100.com/浓烟下的诗歌电台</a> ——陈鸿宇/</p>
</blockquote>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Android Canvas绘制图形-拾音器之动画篇]]></title>
      <url>http://zhongzilu.github.io/2016/05/31/Android-Canvas%E7%BB%98%E5%88%B6%E5%9B%BE%E5%BD%A2-%E6%8B%BE%E9%9F%B3%E5%99%A8%E4%B9%8B%E5%8A%A8%E7%94%BB%E7%AF%87/</url>
      <content type="html"><![CDATA[<h2 id="Android-Canvas绘制图形-拾音器之动画篇"><a href="#Android-Canvas绘制图形-拾音器之动画篇" class="headerlink" title="Android Canvas绘制图形 拾音器之动画篇"></a>Android Canvas绘制图形 拾音器之动画篇</h2><p>标签 <code>Android Canvas</code> <code>View Animation</code> <code>ValueAnimator</code> <code>View动画</code> <code>属性动画</code></p>
<p>前几天我写过一篇文章，叫<a href="">Android Canvas 绘制图形 – 拾音器</a>，那篇文章旨在讲解如何使用Canvas来绘制图形，并没有实现指针的偏转动画实现，那么，今天我们就来看看指针的偏转动画如何实现。</p>
<h3 id="知识准备"><a href="#知识准备" class="headerlink" title="知识准备"></a>知识准备</h3><p>安卓上实现动画的方式分为两种，一种是View动画，包名：<code>android.view.animation</code>，另一种是属性动画，包名：<code>android.animation</code>。</p>
<p>View动画从字面上理解就是作用对象只能是View的派生类，其他的就只能心有余而力不足了。</p>
<p>属性动画的作用对象就不只是针对View的派生类了，他能操作很多属性，比如改变一个控件的宽高值；一个数值平滑过渡到另一个数值等，总之，View动画能做的他能做，View动画不能做的他也能做。对，你没看错，就是这么屌！</p>
<h3 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h3><p>View动画，包括以下几种类型：</p>
<table>
<thead>
<tr>
<th style="text-align:center">类型</th>
<th style="text-align:center">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">AlphaAnimation</td>
<td style="text-align:center">渐变透明度</td>
</tr>
<tr>
<td style="text-align:center">RotateAnimation</td>
<td style="text-align:center">画面旋转</td>
</tr>
<tr>
<td style="text-align:center">ScaleAnimation</td>
<td style="text-align:center">尺寸缩放</td>
</tr>
<tr>
<td style="text-align:center">TranslateAnimation</td>
<td style="text-align:center">位置移动</td>
</tr>
</tbody>
</table>
<p>属性动画(Property Animation)，包括以下几种类型：</p>
<table>
<thead>
<tr>
<th style="text-align:center">类型</th>
<th style="text-align:center">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">ObjectAnimator</td>
<td style="text-align:center">动画执行类，对对象进行操作</td>
</tr>
<tr>
<td style="text-align:center">ValueAnimator</td>
<td style="text-align:center">动画执行类，对数值进行操作</td>
</tr>
</tbody>
</table>
<p>今天我们将使用到的是<code>ValueAnimation</code>类，接下来对动画进行分析，看看要实现指针偏转的动画需要用到什么方法。</p>
<ol>
<li>指针偏转是通过旋转角度来实现的，如果我们要使偏转产生动画，就需要动态的改变旋转的角度。</li>
<li>旋转的角度参数类型是float，在ValueAnimator类中的ofFloat()方法正好是动态改变float数值的，所以我们要用到它。</li>
<li>数值每改变一次，我们都要把变化后的数值赋给rotate()方法，使指针旋转相应角度，所以这里需要对数值变化进行监听，因此会用到addUpdateListener()方法</li>
<li>赋值给rotate()方法后，需要对视图进行重绘，因此我们需要用到视图绘制过程中的invalidate()方法</li>
</ol>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>这里我们用<code>mValue</code>表示指向数值，用变量<code>mAngle</code>表示通过计算后的偏转角度</p>
<p>通常的做法，我们都是在Activity或者Fragment里通过调用一个方法，将指针要指向的数值(<code>mValue</code>)数的方式传递过去，这样的话，我们就有两种思路。</p>
<p>一：使用<code>ofFloat()</code>方法动态改变指针指向的数值，即传递过来的参数mValue</p>
<p>二：将传递过来的参数进行计算成指针偏转的角度(<code>mAngle</code>)，然后使用<code>ofFloat()</code>方法动态改变角度数值</p>
<p>这两种方法都是可取的，具体情况具体分析，由于在界面上我们要动态显示指针指向的数值，如果采用第二种的话，那么我们要计算两次，一次是将指向mValue计算为mAngle，数值动态变化后还要将mAngle计算为mValue，这样比较麻烦，所以我们采用第一种思路。</p>
<p>因此，要实现指针的偏转动画，代码可以这么写：</p>
<pre><code>private int mMaxValue = 50;  //分值区间的最大值
private int mMinValue = -50; //分值区间的最小值
/**输入值，通过输入值来计算指针的旋转角度，即{@mAngle}的值,
 * 最终在界面上呈现的效果是指针指向输入值的刻度上*/
private String mValue = &quot;- -&quot;;
/**刻度盘呈现的总弧度，本案例中总弧度为180，呈半圆形*/
private float mArc = 180f;
/**指针旋转角度值*/
private float mAngle = 0f;

...

/**
 * 设置指针指向数值，并产生旋转动画
 * 这里我们动态改变指向数值
 * @param value 指向数值
 */
public void setValue(float value){
    //{@param value}为指针将要指向的数值，即界面上看到的数值
    ValueAnimator startAnimator = ValueAnimator.ofFloat(0, value);

    startAnimator.addUpdateListener(
       new ValueAnimator.AnimatorUpdateListener() {
        @Override
        public void onAnimationUpdate(ValueAnimator animation) {
            //通过getAnimatedValue()取变化后的值
            float md = (float) animation.getAnimatedValue();
            //计算指针当前应该偏转的角度
            mAngle = md * (mArc / (float) (mMaxValue - mMinValue));
            //界面上显示当前指针显示的数值
            mValue = String.valueOf((int)md);
            //调用重绘方法
            invalidate();

        }
    });
    startAnimator.setDuration(1000);
    startAnimator.start();
}
</code></pre><p>在<code>setValue()</code>方法里我们动态的改变了指针指向的数值和指针偏转的角度，并把这两个数值分别存放在全局变量<code>mValue</code>和<code>mAngle</code>，这样一来，我们只需要在<code>onDraw()</code>方法中，对指针进行旋转和但前指向数值的显示就可以了，代码如下：</p>
<pre><code>/**
 * 注意：
 * 下方的所以坐标计算和长度计算都是依据在屏幕宽度为621px情况下的
 * @param canvas
 */
@Override
protected void onDraw(Canvas canvas) {
    super.onDraw(canvas);

    ...

    System.out.println(&quot;mAngle ==&gt;&quot; + mAngle);
    canvas.rotate(mAngle, xc, yc);

    //画指针
    /**
     * xc * 0.101449 = 深色刻度线条的长度
     * mWidth * 0.064412 = 在屏幕宽度为621下，长度为40
     * 所以下面第三个参数的值可以理解为距离深色刻度线下方有40倍数的间隙
     */
    canvas.drawLine(xc, yc,
            xc - radius + (xc * 0.101449f + mWidth * 0.064412f),
            yc + 3, paintCursor);

    ...

    //值
    pitchValuePaint.setAntiAlias(true);
    pitchValuePaint.setTextSize((mWidth * 0.080515f));
    pitchValuePaint.setColor(getResources().getColor(R.color.colorAccent));

    canvas.drawText(mValue,
            xc - pitchValuePaint.measureText(mValue) / 2,
            yc + (xc * 0.481481f + mWidth * 0.209339f),
            pitchValuePaint);
    ...
}
</code></pre><p>效果如下：</p>
<p><img src="http://www.bit100.com/.zhongzilu/image/TunerView.gif" alt=""></p>
<p>详细的代码，请移步到我的GitHub：<a href="https://github.com/zhongzilu/TunerView" target="_blank" rel="external">https://github.com/zhongzilu/TunerView</a></p>
<p>我是钟子路，Thanks for watching!</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Android Canvas绘制图形-拾音器]]></title>
      <url>http://zhongzilu.github.io/2016/05/26/Android-Canvas%E7%BB%98%E5%88%B6%E5%9B%BE%E5%BD%A2-%E6%8B%BE%E9%9F%B3%E5%99%A8/</url>
      <content type="html"><![CDATA[<h2 id="Android-Canvas-绘制图形-—-拾音器"><a href="#Android-Canvas-绘制图形-—-拾音器" class="headerlink" title="Android Canvas 绘制图形 — 拾音器"></a>Android Canvas 绘制图形 — 拾音器</h2><blockquote>
<p>最近在网上看到一个拾音器的设计图，看起来挺美观的，于是我就想把它实现出来，不多废话，先看图，左边是设计图，右边是实现图<br><img src="http://www.bit100.com/.zhongzilu/image/TunerView_design.png" alt="设计图"><img src="http://www.bit100.com/.zhongzilu/image/TunerView_preview.png" alt="实现效果图"></p>
</blockquote>
<p>除了指针不同，其他的大体上一样</p>
<h3 id="Android-Canvas介绍"><a href="#Android-Canvas介绍" class="headerlink" title="Android Canvas介绍"></a>Android Canvas介绍</h3><p>Canvas作为绘制图形的直接对象，提供了以下几个非常有用的方法</p>
<blockquote>
<ul>
<li>Canvas.save()</li>
<li>Canvas.restore()</li>
<li>Canvas.translate()</li>
<li>Canvas.roate()</li>
</ul>
</blockquote>
<p><code>Canvas.save()</code>这个方法，从字面上理解就是保存的意思，而它的作用也正是将之前的画布保存起来，让后续的操作能像在新的画布上一样操作，这个PhotoShop的图层是一个概念<br><code>Canvas.restore()</code>这个方法，可以理解为合并图层，就是将之前保存下来的图层合并为一个图层<br><code>Canvas.translate()</code>这个方法，可以理解为移动坐标系，很多人在用时，理解为移动画布，所以在计算坐标时会出一些问题，在这里把他理解为移动坐标系更加恰当。画布的初始坐标系是左上角，如果我们调用translate(x, y)之后，则表示将原点(0, 0)移动到了(x, y)，后面的坐标计算都是在这一点上进行的<br><code>Canvas.roate()</code>可以理解为旋转坐标系，用法和Canvas.translate()相似，但多了个角度的参数，调用roate(degree, x, y)之后，则表示将以(x, y)为原点的坐标系旋转degree个角度</p>
<hr>
<blockquote>
<p>Paint理解为画笔，在Canvas上所有的图形，都需要这个对象，以下有几个常用方法</p>
<ul>
<li>paint.setAntiAlias()</li>
<li>paint.setStyle()</li>
<li>paint.setStrokeWidth()</li>
<li>paint.setColor()</li>
</ul>
</blockquote>
<p><code>paint.setAntiAlias()</code>是给画笔设置是否抗锯齿，参数为布尔类型<br><code>paint.setStyle()</code>是给画笔设置画笔样式<br><code>paint.setStrokeWidth()</code>给画笔设置画笔宽度<br><code>paint.setColor()</code>给画笔设置画笔颜色</p>
<h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><p>有了上面的理论基础，现在我们可以来实现上面的效果了，先来分析一下上面效果图中有什么</p>
<blockquote>
<ol>
<li>刻度盘——外面的半圆刻度盘</li>
<li>刻度线——整数的深色粗线和其余德灰色细线</li>
<li>圆形底盘——共三个圆形底盘，最上面的深蓝色圆形要在指针上面</li>
<li>指针</li>
</ol>
</blockquote>
<p>新建一个类，继承View</p>
<pre><code>public class TunerView extends View {
    private int mWidth;
    private int mHeight;

    public TunerView(Context context){
        super(context);
        //获取屏幕的宽高
        WindowManager windowManager = 
            (WindowManager) getContext().Context.WINDOW_SERVICE);

        mWidth = windowManager.getDefaultDisplay().getWidth();
        mHeight = windowManager.getDefaultDisplay().getHeight();
    }

    @Override
    protected void onDraw(Canvas canvas) {
        super.onDraw(canvas);

        ...
    }
}
</code></pre><p><strong>第一步(Step 1)：画刻度盘</strong></p>
<p>由于画布一开始绘制文字时，文字是垂直的，而在设计图中刻度盘是从左往右，文字是水平的，所以需要先对画布坐标系进行旋转</p>
<pre><code>@Override
protected void onDraw(Canvas canvas) {
    super.onDraw(canvas);

    int xc = mWidth / 2;    //屏幕中心X坐标
    int yc = mHeight / 2;   //屏幕中心Y坐标
    int radius = xc - 30;   //圆半径
    /**
     * 正常情况下，一开始写文字，都是垂直的，但我们的仪表盘
     * 要求从左边开始画，文字是水平的，所以需要先对画布坐标系进行逆时针旋转90°
     */
    canvas.rotate(-90, xc, yc);

    //画刻度盘
    Paint paintDegree = new Paint();
    paintDegree.setStrokeWidth(3);
    //画刻度线条
    for (int i = -50; i &lt;= 50; i++){
        //区别整点和非整点的线条样式
        if (i % 10 == 0){
            paintDegree.setStrokeWidth(5);
            paintDegree.setTextSize(30);
            paintDegree.setAntiAlias(true);
            paintDegree.setColor(getResources().getColor(R.color.colorAccent));
            //这里画线的坐标计算，需要自行去理解，这里我就不多加解释了
            canvas.drawLine(xc, yc - radius, xc, yc - radius + 40, paintDegree);
            String degree = String.valueOf(i);
            canvas.drawText(degree,
                    //这里使用了Paint对象的measureText()方法,
                    //该方法是传入一个String类型的参数，经过计算之后返回该String对象中
                    //文字所占用的宽度
                    xc - paintDegree.measureText(degree) / 2,
                    yc - radius + 70,
                    paintDegree);
            /**
             * 由于本案中两个整点之间只被分为了5分，所以每份的间隔就是2
             */
        } else if (i % 2 == 0){
            paintDegree.setStrokeWidth(3);
            paintDegree.setTextSize(15);
            paintDegree.setAntiAlias(true);
            paintDegree.setColor(getResources().getColor(R.color.grey));
            canvas.drawLine(xc, yc - radius + 10, xc, yc - radius + 30, paintDegree);

        }

        //每画完一条刻度线条，就需要对画布坐标系进行旋转，通过旋转简化坐标运算
        //旋转角度为：总度数 / 总份数
        //本案例中，总度数为180°, 分值区间为(-50 ~ 50),所以总份数为100份
        canvas.rotate((float)(180 / 100), xc, yc);
    }

    //画圆形底盘
    ...
}
</code></pre><p>运行效果：<br><img src="http://www.bit100.com/.zhongzilu/image/TunerView_step_1.png" alt="完成刻度盘"></p>
<p><strong>第二步(Step 2)：画园形底盘</strong></p>
<p>画实心圆形底盘，通过调用<code>paint.setColor()</code>来设置颜色，调用<code>paint.drawCircle()</code>方法来画出圆形</p>
<pre><code>//画大圆盘
Paint bigCircle = new Paint();
bigCircle.setColor(getResources().getColor(R.color.colorPrimary));
bigCircle.setAntiAlias(true);
canvas.drawCircle(xc, yc, xc - 180, bigCircle);
//画中等圆盘
Paint midCircle = new Paint();
midCircle.setColor(getResources().getColor(R.color.colorPrimaryDark));
midCircle.setAntiAlias(true);
canvas.drawCircle(xc, yc, xc - 280, midCircle);
//画小圆盘
Paint smallCircle = new Paint();
smallCircle.setColor(getResources().getColor(R.color.colorAccent));
smallCircle.setAntiAlias(true);
canvas.drawCircle(xc, yc, xc - 320, smallCircle);
</code></pre><p><code>drawCircle()</code>方法有四个参数，</p>
<ul>
<li>cx：圆心的x坐标，float类型</li>
<li>cy：圆心的y坐标，float类型</li>
<li>radius：圆形的半径，float类型</li>
<li>paint：画笔对象，Paint类型</li>
</ul>
<p>运行效果：<br><img src="http://www.bit100.com/.zhongzilu/image/TunerView_step_2.png" alt="画三个圆形底盘"></p>
<p><strong>第三步(Step 3)：画指针</strong><br>画指针其实和画线是一个道理，所以我们直接调用<code>drawLine()</code>方法就可以了</p>
<pre><code>//画指针
Paint paintCursor = new Paint();
paintCursor.setStrokeWidth(3);
paintCursor.setAntiAlias(true);
paintCursor.setColor(getResources().getColor(R.color.colorAccent));
canvas.drawLine(xc, yc, xc - radius + 80, yc + 10, paintCursor);
</code></pre><p><code>drawLine()</code>方法有5个参数</p>
<ul>
<li>startX：线条的起始点x坐标，类型float</li>
<li>startY：线条的起始点y坐标，类型float</li>
<li>stopX：线条的结束点x坐标，类型float</li>
<li>stopY：线条的结束点y坐标，类型float</li>
<li>paint：画笔对象，Paint类型</li>
</ul>
<p>运行效果：<br><img src="http://www.bit100.com/.zhongzilu/image/TunerView_step_3.png" alt="指针绘制"></p>
<p><strong>这里注意一下，由于我们的指针使用的颜色和最小的那个圆形的颜色是一样的，所以运行效果里看不出问题，如果换一个颜色，就会发现，指针在最小的圆形上面，而设计图上的指针是在最小的圆形下面，那么这要怎么解决呢？不要方，只需要把绘制最小那个圆的<code>canvas.drawCircle()</code>方法放到绘制指针的<code>drawLine()</code>方法之后就可以了</strong></p>
<p><strong>第四步(Step 4)：画正下方的文字</strong></p>
<p>画正下方的文字，只需要调用<code>canvas.drawText()</code>方法就可以了</p>
<pre><code>Paint pitchPaint = new Paint();
pitchPaint.setAntiAlias(true);  //设置抗锯齿
pitchPaint.setTextSize(40); 
pitchPaint.setColor(getResources().getColor(R.color.colorAccent));
String pitch = &quot;Pitch&quot;;
canvas.drawText(pitch,
        xc - pitchPaint.measureText(pitch) / 2,
        //这里加上180，是因为要加上最外面那个大的圆形的半径
        //再加上80，是为了让文字和最大的那个圆产生间隙
        yc + 180 + 80,
        pitchPaint);
</code></pre><p>运行效果：<br><img src="http://www.bit100.com/.zhongzilu/image/TunerView_step_4.png" alt="绘制正下方的文字"></p>
<p>可以看到文字的方向不对，<strong>为什么文字的方向不对呢？</strong>这是因为我们在绘制刻度盘的时候，我们对画布坐标系进行了旋转，画完刻度盘之后，坐标系被旋转了180°，但由于在绘制刻度盘之前，我们对整个画布坐标系进行逆时针旋转了90°，所以实际上只旋转了90°，因此，我们看到绘制的文字不是在正下方，而是在左边，被旋转了90°，<strong>那么这要怎么解决呢？</strong>最简单的方法当然是在绘制文字之前，把画布坐标系旋转回来。所以需要添加一行代码：</p>
<pre><code>canvas.rotate(-90, xc, yc);
</code></pre><p>运行效果<br><img src="http://www.bit100.com/.zhongzilu/image/TunerView_step_4_1.png" alt="最终效果"></p>
<h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>由于上面的案例代码里用到了很多写死的数字代码(Hard Code)，这不利于代码的灵活性，而且，既然有指针，就应该让指针根据一个提供的输入值，来让指针指向对应的数值位置，所以，我对代码进行了改良，代码如下：</p>
<pre><code>/**
 * Created by zhongzilu on 2016/5/25 0025.
 */
public class DialView extends View {

    private float mWidth;
    private float mHeight;
    private float mAngle = 0;   //指针旋转角度，值为0时指针垂直显示
    private static int mMaxValue = 50;  //分值区间的最大值
    private static int mMinValue = -50; //分值区间的最小值
    /**输入值，通过输入值来计算指针的旋转角度，即{@mAngle}的值,
     * 最终在界面上呈现的效果是指针指向输入值的刻度上*/
    private float mValue = 0;
    /**刻度盘呈现的总弧度，本案例中总弧度为180，呈半圆形*/
    private float mArc = 180;

    public DialView(Context context, AttributeSet attrs) {
        super(context, attrs);

        //获取屏幕的宽高
        WindowManager windowManager = (WindowManager) getContext().getSystemService(
                Context.WINDOW_SERVICE);
        mWidth = windowManager.getDefaultDisplay().getWidth();
        mHeight = windowManager.getDefaultDisplay().getHeight();
    }

    /**
     * 注意：
     * 下方的所以坐标计算和长度计算都是依据在屏幕宽度为621px情况下的
     * @param canvas
     */
    @Override
    protected void onDraw(Canvas canvas) {
        super.onDraw(canvas);

        float xc = mWidth / 2;    //圆中心X坐标
        float yc = mHeight / 2;   //圆中心Y坐标
        float radius = (float)(xc - xc * 0.05314);   //圆半径

        //画刻度盘
        Paint paintDegree = new Paint();

        /**
         * 正常情况下，一开始画线或写文字，都是垂直的，但我们的仪表盘
         * 要求从左边开始画，文字是水平的，所以需要先进行画布旋转90°
         */
        canvas.rotate((-mArc / 2), xc, yc);
        System.out.println(&quot;before rotate==&gt;&quot; + (-mArc / 2));
        /**
         * 本案例中，设置的分值区间为（-50 ~ 50)
         */
        for (int i = mMinValue; i &lt;= mMaxValue; i++){
            //区别整点和非整点
            if (i % 10 == 0){
                //在屏幕宽度为621下，大小为5
                paintDegree.setStrokeWidth((float)(mWidth * 0.008051));
                //刻度字体大小是依据是：在屏幕宽度为621的分辨率下，刚好为30
                paintDegree.setTextSize((float)(mWidth * 0.048309));
                paintDegree.setAntiAlias(true);
                paintDegree.setColor(getResources().getColor(R.color.colorAccent));
                canvas.drawLine(xc, yc - radius, xc, (float)(yc - radius + xc * 0.101449), paintDegree);
                String degree = String.valueOf(i);
                canvas.drawText(degree,
                        //这里使用了Paint对象的measureText()方法,
                        //该方法是传入一个String类型的参数，经过计算之后返回该String对象中
                        //文字所占用的宽度
                        xc - paintDegree.measureText(degree) / 2,

                        //下方mWidth * 0.048309 = 在屏幕宽度为621下，长度为30
                        yc - radius + (float)(xc * 0.101449 + mWidth * 0.048309),
                        paintDegree);
                /**
                 * 由于两个整点之间只被分为了5分，所以每份的间隔就是2
                 */
            } else if (i % 2 == 0){
                paintDegree.setStrokeWidth((float)(mWidth * 0.004830));
                //在屏幕宽度为621下，字体大小为15
                paintDegree.setTextSize((float)(mWidth * 0.024154));
                paintDegree.setAntiAlias(true);
                paintDegree.setColor(getResources().getColor(R.color.grey));
                /**
                 * 画灰色短横线，坐标计算依据是灰色短横向长度为深色长横线的一半，
                 * 并且，两种刻度线的中点在同一个圆的圆弧上
                 * 由于深色刻度线的长度 = 正中深色小圆的半径 = 屏幕宽度一半的0.101449倍
                 */
                canvas.drawLine(xc, 
                        (float)(yc - radius + xc * 0.101449 / 4), 
                        xc, 
                        (float)(yc - radius + xc * 0.101449 / 4 * 3), 
                        paintDegree);

            }

            //通过旋转画布简化坐标运算
            canvas.rotate(mArc / (float)(mMaxValue - mMinValue), xc, yc);
        }

        /**
         * 三个圆盘的半径和屏幕宽度的一半的比例为
         * 屏幕宽度一半 ：大圆 ：中圆 ：小圆 =
         * 1 ：0.481481 ：0.201288 ：0.101449
         */
        //画大圆盘
        Paint bigCircle = new Paint();
        bigCircle.setColor(getResources().getColor(R.color.colorPrimary));
        bigCircle.setAntiAlias(true);
        canvas.drawCircle(xc, yc, (float)(xc * 0.481481), bigCircle);
        //画中等圆盘
        Paint midCircle = new Paint();
        midCircle.setColor(getResources().getColor(R.color.colorPrimaryDark));
        midCircle.setAntiAlias(true);
        canvas.drawCircle(xc, yc, (float)(xc * 0.201288), midCircle);
        //画小圆盘
        Paint smallCircle = new Paint();
        smallCircle.setColor(getResources().getColor(R.color.colorAccent));
        smallCircle.setAntiAlias(true);
        canvas.drawCircle(xc, yc, (float)(xc * 0.101449), smallCircle);
        canvas.save();

        //画指针
        Paint paintCursor = new Paint();
        //在屏幕宽度为621下，大小为3
        paintCursor.setStrokeWidth((float)(mWidth * 0.004830));
        paintCursor.setAntiAlias(true);
        paintCursor.setColor(getResources().getColor(R.color.colorAccent));
        /**
         * 思路：要想让指针以圆心为中心旋转一定角度，要么旋转画布，要么根据坐标来画，
         * 由于旋转角度比根据坐标更简单，所以就用旋转角度的方式来实现
         *
         * 指针具体旋转多少度，得根据算法来计算
         *
         * 算法：角度 = 输入值 * （ 总弧度 / 分值总数）
         *
         * 举例：本案例中给出的分值区间为（-50 ~ 50）,所以分值总数为100
         * 假设现在输入值为30，那么角度就为54°
         */
        mAngle = mValue * (mArc / (float) (mMaxValue - mMinValue));
        System.out.println(&quot;mAngle ==&gt;&quot; + mAngle);
        canvas.rotate(mAngle, xc, yc);
        /**
         * xc * 0.101449 = 深色刻度线条的长度
         * mWidth * 0.064412 = 在屏幕宽度为621下，长度为40
         * 所以下面第三个参数的值可以理解为距离深色刻度线下方有40倍数的间隙
         */
        canvas.drawLine(xc, yc,
                xc - radius + (float)(xc * 0.101449 + mWidth * 0.064412),
                yc + 3, paintCursor);

        //覆盖在指针上的圆
        /**
         * 由于之前的坐标系已经发生了旋转，所以要在正下方写上文字，就需要旋转回来
         * 当然也可以通过去计算坐标来显示在正下方，但旋转画布的方式更加简单和更容易理解
         */
        canvas.rotate(-(mAngle + mArc / 2), xc, yc);

        Paint pitchPaint = new Paint();
        pitchPaint.setAntiAlias(true);
        //在屏幕宽度为621下，字体大小为40
        pitchPaint.setTextSize((float)(mWidth * 0.048309));
        pitchPaint.setColor(getResources().getColor(R.color.colorAccent));
        String pitch = &quot;Pitch&quot;;
        canvas.drawText(pitch,
                xc - pitchPaint.measureText(pitch) / 2,
                //这里加上180，是因为要加上最外面那个大的圆形的半径
                //再加上(mWidth * 0.123188)，是为了让文字和最大的那个圆产生间隙
                //在屏幕宽度为621下，间隙为80
                yc + (float)(xc * 0.481481 + mWidth * 0.123188),
                pitchPaint);

        //值
        Paint pitchValuePaint = new Paint();
        pitchValuePaint.setAntiAlias(true);
        pitchValuePaint.setTextSize((float)(mWidth * 0.080515));
        pitchValuePaint.setColor(getResources().getColor(R.color.colorAccent));
        String value = &quot;- -&quot;;
        canvas.drawText(value,
                xc - pitchValuePaint.measureText(value) / 2,
                yc + (float)(xc * 0.481481 + mWidth * 0.209339),
                pitchValuePaint);

        canvas.restore();
    }
}
</code></pre><p>经过修改过后，只需要修改全局变量<code>mValue</code>的值，就可以使指针指向界面上对应的值了，比如<code>mValue = 30</code>，运行效果<br><img src="http://www.bit100.com/.zhongzilu/image/TunerView_step_5.png" alt="指针旋转测试"></p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>总的来说，没什么难度，关键点在于绘图时的坐标计算，以及对旋转画布的理解，旋转画布是旋转的画布坐标系。在本案例中，我没有对指针的旋转做动画处理，是因为本文重在讲解Canvas画图，各位也可以自行加上指针旋转动画代码。好了，以上就是今天的内容，各位可以发挥自己的想象力，绘制出更多更有趣的图形。我是钟子路，Thanks for watching!</p>
<blockquote>
<p><strong>作者</strong>：<a href="http://www.bit100.com" target="_blank" rel="external">zhongzilu</a><br><strong>源码</strong>：<a href="https://github.com/zhongzilu/TunerView" target="_blank" rel="external">https://github.com/zhongzilu/TunerView</a> </p>
</blockquote>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[【安卓热修复】当你准备开发一个热修复框架需要了解的一切]]></title>
      <url>http://zhongzilu.github.io/2016/05/24/%E3%80%90%E5%AE%89%E5%8D%93%E7%83%AD%E4%BF%AE%E5%A4%8D%E3%80%91%E5%BD%93%E4%BD%A0%E5%87%86%E5%A4%87%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AA%E7%83%AD%E4%BF%AE%E5%A4%8D%E6%A1%86%E6%9E%B6%E9%9C%80%E8%A6%81%E4%BA%86%E8%A7%A3%E7%9A%84%E4%B8%80%E5%88%87/</url>
      <content type="html"><![CDATA[<h2 id="【安卓热修复】当你准备开发一个热修复框架的时候，你需要了解的一切"><a href="#【安卓热修复】当你准备开发一个热修复框架的时候，你需要了解的一切" class="headerlink" title="【安卓热修复】当你准备开发一个热修复框架的时候，你需要了解的一切"></a>【安卓热修复】当你准备开发一个热修复框架的时候，你需要了解的一切</h2><p>很长一段时间前，在我用应用市场软件对我移动设备上的应用更新时，发现每次应用市场提示我更新应用的大小，都有一个节省多少兆大小的醒目文字。当时我很奇怪，难道是对应用安装包进行了压缩吗？过了一段时间后，在我浏览其他人博客时，无意间发现有篇写安卓应用安装包热补丁修复的文章，我仔细看了一遍，一时之间也没看懂，再加上那时也没太多精力，也就搁置起来了，没有进一步了解。</p>
<p>今天工作之余，又在我浏览博客时，再次发现了一篇关于热修复的文章，我看了一下，讲得挺有条理的，特此推荐给大家</p>
<p>原文博客链接：<a href="http://zjutkz.net/2016/05/23/%E5%BD%93%E4%BD%A0%E5%87%86%E5%A4%87%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AA%E7%83%AD%E4%BF%AE%E5%A4%8D%E6%A1%86%E6%9E%B6%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E4%BD%A0%E9%9C%80%E8%A6%81%E4%BA%86%E8%A7%A3%E7%9A%84%E4%B8%80%E5%88%87/" target="_blank" rel="external">当你准备开发一个热修复框架的时候，你需要了解的一切</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[SEO如何提高百度权重]]></title>
      <url>http://zhongzilu.github.io/2016/05/20/SEO%E5%A6%82%E4%BD%95%E6%8F%90%E9%AB%98%E7%99%BE%E5%BA%A6%E6%9D%83%E9%87%8D/</url>
      <content type="html"><![CDATA[<h2 id="SEO如何提高百度权重"><a href="#SEO如何提高百度权重" class="headerlink" title="SEO如何提高百度权重"></a>SEO如何提高百度权重</h2><blockquote>
<p>大家好，我是钟子路，最近在负责公司的网站SEO，我也不是太会，就去查看很多的资料和博客，当然，其中很多方法都是差不多的，所以我在这里就不重复了， 今天就讲讲我无意间发现的，关于如何提高百度权重的方法，由于该方法还没得到验证，所以这里只是提供一种思路，如果可行，请分享给其他有需要的人。</p>
</blockquote>
<h3 id="科普时间"><a href="#科普时间" class="headerlink" title="科普时间"></a>科普时间</h3><p>百度权重是站长工具推出的针对网站优化关键词排名预计给网站带来流量，划分出0-9十个等级的第三方网站欢迎度评估数据。</p>
<p>百度官方目前只公开了竞价推广用户提供0-10不同分值关键词质量度的评级。</p>
<p>权重数值越大，说明网站自然流量越大，自然流量大，那么相应的关键词排名就相对靠前，权重，流量，关键词排名三者之间是相辅相成的。</p>
<p>网站关键词的数量越多，积累的权重也会越高，不过，这还要看关键词的流量，如果关键词的流量非常的低，即便排名很靠前，权重也不会积累到很多，不过可以积少成多。</p>
<p>百度权重的规则：</p>
<blockquote>
<p>权重1 百度预计流量1~99<br>权重2 百度预计流量100~499<br>权重3 百度预计流量500~999<br>权重4 百度预计流量1000~4999<br>权重5 百度预计流量5000~9999<br>权重6 百度预计流量10000~49999<br>权重7 百度预计流量50000~199999<br>权重8 百度预计流量200000~999999<br>权重9 百度预计流量1000000以上</p>
</blockquote>
<p>站长们要查看自己网站的权重，通常是通过站长工具进行查询的，我也不例外，直接在百度上搜索“站长工具”就可以了，百度权重查询地址<a href="http://rank.chinaz.com/，输入自己网站的网址就可以查询到当前的百度权重了。如下图：" target="_blank" rel="external">http://rank.chinaz.com/，输入自己网站的网址就可以查询到当前的百度权重了。如下图：</a></p>
<p><img src="http://www.bit100.com/.zhongzilu/image/zhanzhanggongju.png" alt=""></p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>既然关键字的流量和权重有直接关系，那么我们就可以在自己网站关键字里加入一些高频次、高流量的搜索关键词，这样可以让自己的网站更容易出现在搜索结果里，如果点击了你的网站，就会给自己网站增加一部分流量，而流量的大小决定网站的权重。</p>
<p><strong>那么如何获得高频次、高流量的搜索关键词呢？</strong></p>
<p>这里就需要通过百度指数来进行查找了，百度指数地址<a href="http://index.baidu.com/" target="_blank" rel="external">http://index.baidu.com/</a></p>
<p><img src="http://www.bit100.com/.zhongzilu/image/baidu_index.png" alt=""></p>
<p>输入要查询的关键字就可以查询到关键字的搜索指数以及历史趋势记录</p>
<p><img src="http://www.bit100.com/.zhongzilu/image/baidu_index_key_word.png" alt=""></p>
<p>点击上部【需求图谱】选项卡，可以挖掘指定关键字相近关键字的分布指数</p>
<p><img src="http://www.bit100.com/.zhongzilu/image/baidu_index_chart.png" alt=""></p>
<p>这里的数据挺直观详细的，我就不多赘述了，祝愿各位站长们找到自己满意的关键字，Good luck!</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[如何在Android Studio中创建File Templates]]></title>
      <url>http://zhongzilu.github.io/2016/05/10/%E5%A6%82%E4%BD%95%E5%9C%A8Android-Studio%E4%B8%AD%E5%88%9B%E5%BB%BAFile-Templates/</url>
      <content type="html"><![CDATA[<h2 id="如何在Android-Studio中创建File-Templates"><a href="#如何在Android-Studio中创建File-Templates" class="headerlink" title="如何在Android Studio中创建File Templates"></a>如何在Android Studio中创建File Templates</h2><p>标签： <code>File Template</code> <code>Android Studio</code></p>
<blockquote>
<p>我发现一个可以让写程序变得简单的方法，那就是自定义文件模板(Custom File Templates).那么什么是File Templates呢？说白了，就是一个已经包含一部分代码的源文件</p>
</blockquote>
<h3 id="如何创建File-Templates"><a href="#如何创建File-Templates" class="headerlink" title="如何创建File Templates"></a>如何创建File Templates</h3><p>首先，找到创建File Template的位置，依次打开<code>File ==&gt; Setting ==&gt; Editor ==&gt; File and Code Templates</code><br><img src="http://www.bit100.com/.zhongzilu/image/Settings.png" alt="File Templates Settings"></p>
<p>之后点击 <code>+</code>号添加一个File Template，这里需要填写 File Template的名称和代码。在本次案例中，我们将创建一个实现了部分方法的RecyclerViewAdapter的File Template。因此就取名叫RecyclerViewAdapter<br><img src="http://www.bit100.com/.zhongzilu/image/RecyclerViewAdapter.png" alt="RecyclerViewAdapter"></p>
<p>之后你就可以在下方的代码区域粘贴或者编写你的模板代码了。这里有几个预置的变量可以使用，当文件被创建的时候，这些预置的变量将会被 将会被对应的值替代，变量如下：</p>
<ul>
<li><code>${NAME}</code> 选择的文件的文件名</li>
<li><code>${PACKAGE_NAME}</code>包名</li>
<li><code>${DATE}</code> 系统当前的时间<br>当然，你也可以自定义变量，在本案例中，我们需要提供<code>ViewHolder</code>类和集合List的类型，所以自定义变量分别为<code>${VIEWHOLDER_CLASS}</code>和<code>${ITEM_CLASS}</code></li>
</ul>
<p>那么现在就来编写用于创建模板的代码，代码如下：</p>
<pre><code>#if (${PACKAGE_NAME} &amp;&amp; ${PACKAGE_NAME} != &quot;&quot;)package ${PACKAGE_NAME};#end

import android.content.Context;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import java.util.List;

#parse(&quot;File Header.java&quot;)
public class ${NAME} extends RecyclerView.Adapter&lt;${VIEWHOLDER_CLASS}&gt; {
  private final Context context;
  private List&lt;${ITEM_CLASS}&gt; items;

  public ${NAME}(List&lt;${ITEM_CLASS}&gt; items, Context context) {
    this.items = items;
    this.context = context;
  }

  @Override
  public ${VIEWHOLDER_CLASS} onCreateViewHolder(ViewGroup parent, int viewType) {
    View v = LayoutInflater.from(parent.getContext()).inflate(R.layout.${LAYOUT_RES_ID}, parent, false);
    return new ${VIEWHOLDER_CLASS}(v);
  }

  @Override
  public void onBindViewHolder(${VIEWHOLDER_CLASS} holder, int position){
    ${ITEM_CLASS} item = items.get(position);
    //TODO Fill in your logic for binding the view.
  }
  @Override
  public int getItemCount() {
    if (items == null){
      return 0;
    }
    return items.size();
  }
}
</code></pre><p>当你想要使用这个文件模板时，会提示你提供相关变量的值，比如<code>${VIEWHOLDER_CLASS}</code>和<code>${ITEM_CLASS}</code>,填写的值会自动替换对应的变量，非常的方便。</p>
<p>要使用已经定义好的File Template，只需要选中要创建位置的文件夹，然后点击鼠标右键，再点“New”，你就可以在列表中看到刚创建的File Template的名字<br><img src="http://www.bit100.com/.zhongzilu/image/Selecting-custom-template.png" alt="Selecting custom template"></p>
<p>点击RecyclerViewAdapter后填写相关变量的值<br><img src="http://www.bit100.com/.zhongzilu/image/FillInCustomTemplateVariables.png" alt="Fill In Custom Template Variables"></p>
<p>填写完后点击”OK”，之后你就可以看到自动生成的代码了<br><img src="http://www.bit100.com/.zhongzilu/image/GeneratedClassFromTemplate.png" alt="Generated Class From Template"></p>
<p>这样，今后我要实现一个RecyclerView的Adapter时，就不用再去写那么多代码了</p>
<p>如果你有一些比较好的代码模板，也可以分享给我哦 <em>^_^</em></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[如何在Android Studio(IntelliJ)中创建Live Templates]]></title>
      <url>http://zhongzilu.github.io/2016/05/10/%E5%A6%82%E4%BD%95%E5%9C%A8Android-Studio-IntelliJ-%E4%B8%AD%E5%88%9B%E5%BB%BALive-Templates/</url>
      <content type="html"><![CDATA[<h2 id="如何在Android-Studio-IntelliJ中创建Live-Templates"><a href="#如何在Android-Studio-IntelliJ中创建Live-Templates" class="headerlink" title="如何在Android Studio/IntelliJ中创建Live Templates"></a>如何在Android Studio/IntelliJ中创建Live Templates</h2><p>标签： <code>Android Studio</code> <code>IntelliJ Live</code> <code>Template</code> </p>
<h3 id="何为Live-Templates"><a href="#何为Live-Templates" class="headerlink" title="何为Live Templates?"></a>何为Live Templates?</h3><blockquote>
<p>frequently-used or custom code constructs that you can insert into your source code file quickly, efficiently and accurately.<br>快速，高效，准确的将常用或自定义构造代码插入到你的源代码文件中</p>
</blockquote>
<p>通俗的讲，就是像快捷键一样，只需要输入几个简写的英文字母就可以快速自动插入一行或多行代码。</p>
<p>在Android Studio/IntelliJ编辑器中，默认使用<code>Ctrl + J</code>快捷键可以调出Live Templates，可以自动补全所设置的模板的代码，善用它能够很大程度上减少开发时间。</p>
<p>举个例子，输入<code>psfi</code>，然后按回车键，编辑器将会自动生成代码<code>public static final int</code>，这就节省了19个要输入的字母。</p>
<p>Android Studio/IntelliJ编辑器中预置了一些常用的Live Templates，大家可以自行去查看，查看位置<code>File ==&gt; Settings ==&gt; Editor ==&gt; Live Templates</code><br><img src="http://www.bit100.com/.zhongzilu/image/1462599293525.png" alt="Live Templates"></p>
<h3 id="如何创建自定义的Live-Templates？"><a href="#如何创建自定义的Live-Templates？" class="headerlink" title="如何创建自定义的Live Templates？"></a>如何创建自定义的Live Templates？</h3><ul>
<li>找到Live Templates的位置，然后点击右上角的<code>+</code>号，再选择<code>Template Group</code>，写上一个名称</li>
</ul>
<p><img src="http://www.bit100.com/.zhongzilu/image/1462602208553.png" alt="Template Group"><br><img src="http://www.bit100.com/.zhongzilu/image/1462602471454.png" alt="Custom Template Group"></p>
<ul>
<li>接着再点击<code>+</code>号，选择<code>Live Template</code>，之后填写相关的内容</li>
</ul>
<p><img src="http://www.bit100.com/.zhongzilu/image/1462602753037.png" alt=""></p>
<h3 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h3><p>我用一个快速插入RecyclerView控件代码的例子来举例，设置如下图：<br><img src="http://www.bit100.com/.zhongzilu/image/1462603188209.png" alt="RecyclerView Live Template"></p>
<p>填写相关内容完毕之后 ，注意下方的一行红字，此时定义的Live Template还没生效，需要点击<code>Define</code>，然后选择该Live Template要应用到什么样的场景中。因为这里我定义的是安卓的控件代码，所以就归类为XML</p>
<p><img src="http://www.bit100.com/.zhongzilu/image/1462604207098.png" alt="Define Live Template"></p>
<p>点击<code>OK</code>按钮生效。注意勾选右下角的<code>Reformat according to style</code>选项</p>
<p>要想使用刚才定义的Live Template，只需要在android的XML布局文件中输入rcv，然后按回车键就可以了，如下图所示：<br><img src="http://www.bit100.com/.zhongzilu/image/recyclerviewtemplate.gif" alt="Use Live Template"></p>
<p><strong>以上就是如何在Android Studio/IntelliJ编辑器中创建Live Template的方法，相信富有创意的各位能够创建出更多的更方便的Live Template，这对于今后的代码编写大有裨益</strong></p>
<p>另外，我在这里推荐一篇博客：<a href="http://blog.csdn.net/DesmondJ/article/details/47017205" target="_blank" rel="external">http://blog.csdn.net/DesmondJ/article/details/47017205</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Wordpress自定义栏目的使用]]></title>
      <url>http://zhongzilu.github.io/2016/05/10/Wordpress%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%8F%E7%9B%AE%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<h2 id="WordPress自定义栏目的使用"><a href="#WordPress自定义栏目的使用" class="headerlink" title="WordPress自定义栏目的使用"></a>WordPress自定义栏目的使用</h2><blockquote>
<p><strong>前言</strong></p>
<p>最近有个任务，要实现在公司官网上点击某个商品的购买按钮，就跳转到对应的淘宝店页面去。由于公司官网用的WordPress平台，我之前只是听说过，并没有实质性使用过，所以一开始就是一头雾水，再加上网站原本是由外包公司做的，交接时没有任何文档，因此我根本不知如何下手，但最后还是硬着头皮去做了。</p>
</blockquote>
<p>我思考着要完成这个任务我需要怎么做，由于网站上的内容都是动态从数据库中取的，所以如果我要实现点击购买按钮就跳转到对应网店的功能，就不可能在代码中把跳转的店铺地址写死了，必须要从数据库中去读取，并且还要和商品关联起来才行。</p>
<p>这其中肯定涉及到把链接地址写入数据库，WordPress提供了一个管理后台，通过管理后台可以把数据写入数据库。</p>
<p>打开后台，找到文章编辑页面，在右上方有个<code>显示选项</code>，展开后可以显示和隐藏模块。勾选<code>自定义栏目</code><br><img src="http://www.bit100.com/.zhongzilu/image/1460715829974.png" alt="显示选项"></p>
<p>在页面下方可以看到这个模块，在这里可以新增自定义的数据字段，并给它赋值。<br><img src="http://www.bit100.com/.zhongzilu/image/1460715932310.png" alt="自定义栏目"></p>
<p>拿我的任务来举例，我点击购买按钮之后跳转到对应的商品淘宝店，所以商品淘宝店的地址就需要写入数据库，所以现在新增一个自定义字段，点击<code>输入新栏目</code><br><img src="http://www.bit100.com/.zhongzilu/image/1460716205273.png" alt="添加自定义栏目"></p>
<p>输入自定义名称和值，输入完成后点击<code>添加自定义栏目</code><br><img src="http://www.bit100.com/.zhongzilu/image/1460716383075.png" alt="添加自定义栏目"></p>
<p>添加完之后就是如下图所示<br><img src="http://www.bit100.com/.zhongzilu/image/1460773373270.png" alt="添加自定义栏目成功"></p>
<p><strong>自定义栏目添加成功了，那么问题来了，我们如何取到自定义栏目的值并显示在页面上呢？</strong></p>
<p>在WordPress中有个<code>get_post_meta()</code>的函数，官方的解释是：</p>
<blockquote>
<p>This function returns the values of the custom fields with the specified key from the specified post.</p>
</blockquote>
<p>翻译过来大概的意思是：该函数用于取出用户设置的自定义字段的值。</p>
<p><strong>用途</strong></p>
<p>该函数的用处很多，很多主题用来设置文章相应图片的设置，这与将远程图像设置为缩略图有异曲同工之妙，当然自定义字段还可以用于存储许多我们觉得更有用的东西，例如统计信息，等等。</p>
<p><strong>用法</strong></p>
<blockquote>
<p><code>&lt;?php $meta_values = get_post_meta($post_id, $key, $single); ?&gt;</code></p>
</blockquote>
<p><strong>参数解释</strong></p>
<blockquote>
<p><code>$post_id</code>文章的ID（如果在循环中，你可以用 get_the_ID()来设置）,<br><code>$key</code>自定义字段的名称（键值）,<br><code>$single</code>是否以字符串形式返回，false会返回数组形式。</p>
</blockquote>
<p><strong>缺省用法</strong></p>
<blockquote>
<p><code>&lt;?php $value = get_post_meta(76, &#39;key&#39;); ?&gt;</code></p>
</blockquote>
<p><strong>实例</strong></p>
<pre><code class="php">if (have_posts()) ://如果有文章
 while (have_posts()) : the_post(); //开启主循环
   $value  = get_post_meta(get_the_ID(),&#39;custom_meta&#39;,true);
 endwhile; 
 endif;
</code></pre>
<p>上面介绍完<code>get_post_meta()</code>函数，现在我们就来实现我的这个任务。<br>在项目源代码中找到使用的主题的文件夹，我的文件夹位置为：<code>htdocs/wp-content/themes/jitatheme/</code><br>再找到<code>function.php</code>文件并打开，在这里我们将封装成一个获取地址的函数，代码如下：</p>
<pre><code>/**
*获取淘宝店铺商品的地址
*/
function getTB_Url($postID){
  $key = &#39;direct_to_tb&#39;;
  $url = get_post_meta($postID, $key, true);
  return $url;
}
</code></pre><p>然后找到我们要修改的页面，用一个<code>&lt;a&gt;</code>标签来实现点击跳转。我们在<code>&lt;a&gt;</code>标签的href属性中来调用刚才封装的函数，代码如下：</p>
<pre><code>&lt;a class=&quot;btn&quot; href=&quot;&lt;?php echo getTB_Url(get_the_ID()); ?&gt;&quot; target=&quot;_blank&quot;&gt;点击购买&lt;/a&gt;
</code></pre><p>最后在页面上点击测试一下，跳转正确，任务完毕。</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote>
<ul>
<li>了解了如何在WordPress后台管理界面添加自定义栏目</li>
<li>了解了如何获取自定义栏目的值和<code>get_post_meta()</code>函数的使用</li>
</ul>
</blockquote>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[MVC&MVP模式有何不同]]></title>
      <url>http://zhongzilu.github.io/2016/05/10/MVC-MVP%E6%A8%A1%E5%BC%8F%E6%9C%89%E4%BD%95%E4%B8%8D%E5%90%8C/</url>
      <content type="html"><![CDATA[<h1 id="MVC-amp-MVP模式有何不同"><a href="#MVC-amp-MVP模式有何不同" class="headerlink" title="MVC &amp; MVP模式有何不同"></a>MVC &amp; MVP模式有何不同</h1><p>标签 :  MVP MVC</p>
<hr>
<p><strong>本文是翻译国外的一篇文章,英语水平有限,翻译有误的地方希望提出来,以方便修改,谢谢</strong></p>
<blockquote>
<p>原文传送门: <a href="http://www.infragistics.com/community/blogs/todd_snyder/archive/2007/10/17/mvc-or-mvp-pattern-whats-the-difference.aspx" target="_blank" rel="external">http://www.infragistics.com/community/blogs/todd_snyder/archive/2007/10/17/mvc-or-mvp-pattern-whats-the-difference.aspx</a></p>
</blockquote>
<hr>
<blockquote>
<p>Over the years I have mentored many developers on using design patterns and best practices.<br>多年来我有辅导过很多开发者使用设计模式和最佳实践</p>
<p>One question that keeps coming up over and over again is:What are the differences between the Model View Controller (MVC) and Model View Presenter (MVP) patterns?<br>一遍又一遍出现的一个问题是: 模型 视图 控制器(MVC模式)和模型 视图 主持人(MVP模式)之间有哪些不同?</p>
<p>Surprisingly the answer is more complex than what you would suspect.<br>令人惊讶的是答案比你想象中的更复杂</p>
<p>Part of reasons I think many developers shy away from using either pattern is the confusion over the differences.<br>我认为一部分原因是因为许多开发者回避使用两种模式带来的混乱</p>
<p>Before we dig into the differences let’s examine how the patterns work and the key benefits to using either one.<br>在我们深入研究两种模式如何工作和使用其中一种带来的关键利益之前</p>
<p>Both (MVC &amp; MVP) patterns have been use for several years and address a key OO principal namely separation of concerns between the UI and the business layers.<br>这两种模式(MVC &amp; MVP)已经使用了好几年,并且处理面向对象的关键就是分离界面UI层和业务层.</p>
<p>There are a number of frameworks is use today that based on these patterns including: JAVA Struts, ROR, Microsoft Smart Client Software Factory (CAB), Microsoft Web Client Software Factory, and the recently announced ASP.Net MVC framework.<br>这里有一些如今正在被使用的,基于这些模式的框架,包括:Java Struts, ROR, Microsoft Smart Client Software Factory (CAB), Microsoft Web Client Software Factory,还有最近发布的ASP.Net MVC框架</p>
<p><strong>Model View Controller (MVC) Pattern</strong><br><img src="http://www.bit100.com/.zhongzilu/image/MVC_View.jpg" alt="MVC"></p>
<p>The MVC pattern is a UI presentation pattern that focuses on separating the UI (View) from its business layer (Model).<br>MVC模式是一个着重于从业务层(Model)分离UI(View)的UI表示模型</p>
<p>The pattern separates responsibilities across three components: the view is responsible for rending UI elements, the controller is responsible for responding to UI actions, and the model is responsible for business behaviors and state management.<br>模型分离的重任横跨三个组件: 视图层负责渲染UI元素, 控制器负责响应UI操作, 模型层负责业务逻辑和状态管理.</p>
<p>In most implementation all three components can directly interact with each other and in some implementations the controller is responsible for determining which view to display (<a href="https://msdn.microsoft.com/en-us/library/ms978723.aspx" target="_blank" rel="external">Front Controller Pattern</a>),<br>多数的实现方法，可以使这三个组件互相直接作用影响，有一些实现的方法里，控制器负责确定哪些试图的显示（<a href="https://msdn.microsoft.com/en-us/library/ms978723.aspx" target="_blank" rel="external">Front Controller Pattern</a>)</p>
<p><strong>Model View Presenter (MVP) Pattern</strong><br><img src="http://www.bit100.com/.zhongzilu/image/MVP_View.jpg" alt="MVP"></p>
<p>The MVP pattern is a UI presentation pattern based on the concepts of the MVC pattern.<br>MVP模型是基于MVC模型的UI表示模型。</p>
<p>The pattern separates responsibilities across four components: the view is responsible for rending UI elements, the view interface is used to loosely couple the presenter from its view, the presenter is responsible for interacting between the view/model, and the model is responsible for business behaviors and state management.<br>模型分离的重任横跨四个组件:视图层负责渲染UI元素， 视图层接口被用于把中介者（Presenter)从视图中解耦，中介者负责视图（View)和模型(Model)之间的交互,模型层负责业务逻辑和状态管理.</p>
<p>In some implementations the presenter interacts with a service (controller) layer to retrieve/persist the model.<br>在某些实现方法中，中介者会和服务层/控制器层交互来获取或持有model。</p>
<p>The view interface and service layer are commonly used to make writing unit tests for the presenter and the model easier.<br>视图接口和服务层通常被用来编写中介者和模型之间的单元测试。</p>
</blockquote>
<h2 id="关键优势"><a href="#关键优势" class="headerlink" title="关键优势"></a>关键优势</h2><blockquote>
<p>Before using any pattern a developers needs to consider the pros and cons of using it.<br>在使用任何开发模式之前，开发人员需要考虑使用它的优点和缺点。</p>
<p>There are a number of key benefits to using either the MVC or MVP pattern (See list below).<br>这里有一些使用MVC和MVP模型的关键好处（请看下面的列表）。</p>
<p>But, there also a few drawbacks to consider. The biggest drawbacks are additional complexity and learning curve.<br>但是，这里也有一些缺点需要考虑。最大的缺点就是它的复杂性和需要付出额外的学习成本。</p>
<p>While the patterns may not be appropriate for simple solutions; advance solutions can greatly benefit from using the pattern.<br>这种模型可能不太适合一般的解决方案；好的解决方案可以从中获得更大的利益。</p>
<p>I’m my experience a have seen a few solutions eliminate a large amount of complexity but being re-factored to use either pattern.<br>在我的经历中，我见过使用这些模式来重构项目，解决了不少的复杂的问题。</p>
<ul>
<li><p>Loose coupling – The presenter/controller are an intermediary between the UI code and the model. This allows the view and the model to evolve independently of each other.<br>松散耦合 - presenter或控制器在UI代码和模型之间充当着中间媒介的角色，这就使得视图和控制器之间互相独立。</p>
</li>
<li><p>Clear separation of concerns/responsibility<br>清晰分离关注点和职责（关于concerns的翻译请自行有道）<br>– UI (Form or Page) – Responsible for rending UI elements<br>UI(表单或页面） - 负责渲染UI元素<br> – Presenter/controller – Responsible for reacting to UI events and interacts with the model<br>中介者/控制器 - 负责对UI事件与模型进行交互<br> – Model – Responsible for business behaviors and state management<br>模型 - 负责业务逻辑和状态管理.</p>
</li>
<li><p>Test Driven – By isolating each major component (UI, Presenter/controller, and model) it is easier to write unit tests. This is especially true when using the MVP pattern which only interacts with the view using an interface.<br>测试驱动 - 通过分离每个主要组件（UI,Presenter/controller, model)更容易编写单元测试，当使用MVP模型且只通过接口来和视图层交互时，就更应该这样做。</p>
</li>
<li><p>Code Reuse – By using a separation of concerns/responsible design approach you will increase code reuse. This is especially true when using a full blown domain model and keeping all the business/state management logic where it belongs.<br>代码复用 - 通过使用分离关注点和职责的设计可以增加你的代码复用。在使用全面的域模型和保持所属业务和状态管理的逻辑时，就更应该这样做。</p>
</li>
<li><p>Hide Data Access – Using these patterns forces you to put the data access code where it belongs in a data access layer. There a number of other patterns that typical works with the MVP/MVC pattern for data access. Two of the most common ones are repository and unit of work. (See Martin Fowler – Patterns of Enterprise Application Architecture for more details)<br>隐藏数据访问 - 使用这种模式会强迫你使用数据接入层中的数据接入代码。这里有一些其他典型的使用MVP/MVC模型来进行数据访问的模型，最常见的两个就是库和工作单元。（想看更多细节请看Martin Fowler的企业应用架构模式【Martin Fowler - Patterns of Enterprise Application Architecture】)</p>
</li>
<li><p>Flexibility/Adaptable – By isolating most of your code into the presenter/controller and model components your code base is more adaptable to change. For example consider how much UI and data access technologies have changed over the years and the number of choices we have available today. A properly design solution using MVC or MVP can support multi UI and data access technologies at the same time.<br>灵活/适用 - 通过分离Presenter/controller和model组件可以使你的代码更灵活适用.举个例子,这些年来有许多UI技术和数据接入技术都有所改变,如今我们有许多的选择.恰当的使用MVC或者MVP模式来设计解决方案,可以同时支持多种UI技术和数据接入技术.</p>
</li>
</ul>
</blockquote>
<h2 id="关键区别"><a href="#关键区别" class="headerlink" title="关键区别"></a>关键区别</h2><blockquote>
<p>So what really are the differences between the MVC and MVP pattern.<br>Actually there are not a whole lot of differences between them.<br>因此,MVC和MVP模式之间真正的区别.其实是没有太多区别.</p>
<p>Both patterns focus on separating responsibility across multi components and promote loosely coupling the UI (View) from the business layer (Model).<br>这两者都是专注跨组件分离职责,促进UI层从业务层中解耦.</p>
<p>The major differences are how the pattern is implemented and in some advanced scenarios you need both presenters and controllers.<br>主要的区别在于如何实现,在某些高级的应用场景中需要同时有Presenter和Controler</p>
<p>Here are the key differences between the patterns:<br>这里有些这两种模式之间的关键区别:</p>
<ul>
<li><p>MVP模式<br>– View is more loosely coupled to the model. The presenter is responsible for binding the model to the view.<br>视图和模型之间耦合更加松散.中介者负责把model绑定到视图层.<br>– Easier to unit test because interaction with the view is through an interface<br>更加容易编写单元测试,因为都是通过接口和视图交互的.<br>– Usually view to presenter map one to one. Complex views may have multi presenters.<br>通常情况下,视图和中介者是一一对应的.复杂的视图可能会有多个中介者.</p>
</li>
<li><p>MVC模式<br>– Controller are based on behaviors and can be shared across views<br>控制器是建立在行为上的,并且可以跨视图共享<br>– Can be responsible for determining which view to display<br>能够负责决定要显示哪个视图</p>
</li>
</ul>
<p>Hopefully you found this post interesting and it helped clarify the differences between the MVC and MVP pattern.<br>希望你会觉得这篇文章是有趣的,这篇文章会帮助你理清MVC和MVP模式之间的区别.</p>
<p>If not, do not be discouraged patterns are powerful tools that can be hard to use sometimes.<br>如果没理清,请不要泄气,模型是一个强大的工具,以至于有时在使用时会觉得很困难</p>
<p>One thing to remember is that a pattern is a blue print and not an out of the box solutions.<br>你只需要记住,模型只是一个蓝图,并不是快速的解决方案.</p>
<p>Developers should use them as a guide and modify the implementation according to their problem domain.<br>开发者应该把它们作为指导手册,并根据遇到的问题修正实现方案.</p>
</blockquote>
<hr>
<blockquote>
<p><strong>作者</strong> :<a href="http://www.bit100.com" target="_blank" rel="external">zhongzilu</a></p>
</blockquote>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Android开发之MVP初体验]]></title>
      <url>http://zhongzilu.github.io/2016/05/10/Android%E5%BC%80%E5%8F%91%E4%B9%8BMVP%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
      <content type="html"><![CDATA[<h1 id="Android开发-MVP之初体验"><a href="#Android开发-MVP之初体验" class="headerlink" title="Android开发 MVP之初体验"></a>Android开发 MVP之初体验</h1><p>标签 ：Android MVP MVC</p>
<hr>
<p>熟悉安卓开发的童鞋应该都熟悉MVC架构模式, MVC开发模式即:</p>
<blockquote>
<p>Model(模型) – View(视图) – Control(控制器)</p>
</blockquote>
<p>逻辑图如下:<br><img src="http://www.bit100.com/.zhongzilu/image/MVC.png" alt="MVC"></p>
<p>而这种开发模式有个缺点,就是在项目越来越大时,文件会越来越多,查找起来很不方便,而且Activity或者Fragment里面的代码会越来越臃肿,看起来很凌乱,要修改更是让人头疼,于是就提出了一种MVP的开发模式,MVP开发模式即:</p>
<blockquote>
<p>Model(模型) – View(视图) – Presente(任命者/中介)</p>
</blockquote>
<p>逻辑图如下:<br><img src="http://www.bit100.com/.zhongzilu/image/mvp.png" alt="MVP"></p>
<p>网上有很多讲解MVP的文章和教程,我这里就不详细介绍了,但还有很多人看过教程之后依然不知如何实现MVP,今天主要通过实际代码的方式来体验MVP开发</p>
<p>本次使用的代码为Github上的一个开源项目,名为<a href="https://github.com/antoniolg/androidmvp" target="_blank" rel="external">androidmvp</a></p>
<blockquote>
<p>传送门 <a href="https://github.com/antoniolg/androidmvp" target="_blank" rel="external">https://github.com/antoniolg/androidmvp</a></p>
</blockquote>
<h2 id="先看看界面"><a href="#先看看界面" class="headerlink" title="先看看界面"></a>先看看界面</h2><p>界面很简单,就是一个登录界面和一个ListView填充的主界面,登录之后跳转到主界面,主界面上显示一个列表<br><img src="http://www.bit100.com/.zhongzilu/image/loginScreenShot.png" alt="登录界面"><img src="http://www.bit100.com/.zhongzilu/image/mainScreenShot.png" alt="主界面"></p>
<h2 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h2><p>用Android Studio打开项目之后可以看到如下的项目结构<br><img src="http://www.bit100.com/.zhongzilu/image/structure.png" alt="项目结构"></p>
<p>通过截图可以看出,该项目是根据<strong>界面来分类的</strong>,Login文件夹下放的是所有与登录界面有关的文件,main文件夹下放的是所有与主界面有关的文件</p>
<p>其中, Login文件夹下共有6个文件, 3个类文件, 3个接口文件</p>
<p>类文件:</p>
<blockquote>
<ul>
<li>LoginActivity</li>
<li>LoginInteratorImpl</li>
<li>LoginPresenterImpl</li>
</ul>
</blockquote>
<p>接口文件:</p>
<blockquote>
<ul>
<li>LoginView</li>
<li>LoginInteractor</li>
<li>LoginPresenter</li>
</ul>
</blockquote>
<h2 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h2><p>打开<strong>LoginActivity.java</strong>文件</p>
<pre><code>public class LoginActivity extends Activity implements LoginView, View.OnClickListener {

    private ProgressBar progressBar;
    private EditText username;
    private EditText password;
    private LoginPresenter presenter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);

        //实例化控件
        ...

        presenter = new LoginPresenterImpl(this);
    }
    ...
</code></pre><p>从上面代码可以看出,该Activity实现了LoginView的接口和View的点击事件, 并且实例化了一个LoginPresenterImpl对象</p>
<p>现在打开<strong>LoginView.java</strong></p>
<pre><code>public interface LoginView {
    void showProgress();

    void hideProgress();

    void setUsernameError();

    void setPasswordError();

    void navigateToHome();
}
</code></pre><p>可以看到LoginView文件中定义了几个接口, 通过名称可以很容易知道每个接口是用来干什么的<br>返回LoginActivity也很容易发现是如何实现这几个接口的,如下:</p>
<pre><code class="java">Override public void showProgress() {
    progressBar.setVisibility(View.VISIBLE);
}

Override public void hideProgress() {
    progressBar.setVisibility(View.GONE);
}

Override public void setUsernameError() {
    username.setError(getString(R.string.username_error));
}

Override public void setPasswordError() {
    password.setError(getString(R.string.password_error));
}

@Override public void navigateToHome() {
    startActivity(new Intent(this, MainActivity.class));
    finish();
}
</code></pre>
<p>打开<strong>LoginPresenter.java</strong></p>
<pre><code class="java">public interface LoginPresenter {
    void validateCredentials(String username, String password);

    void onDestroy();
}
</code></pre>
<p>可以看到定义了两个接口,其中validateCredentials接口是用来验证用户名和密码是否通过验证的<br>在LoginActivity中也有实现</p>
<pre><code>@Override public void onClick(View v) {
    presenter.validateCredentials(username.getText().toString(), 
        password.getText().toString());
}
</code></pre><p><strong>看到这里, 我们可以总结出LoginActivity没有做任何逻辑相关的事情,而是在做界面显示相关和界面跳转的事情, 就连验证帐号的逻辑都是交给LoginPresenterImpl类的</strong></p>
<p>那么现在顺藤摸瓜,打开LoginPresenterImpl.java文件</p>
<pre><code>public class LoginPresenterImpl implements LoginPresenter, 
        LoginInteractor.OnLoginFinishedListener {

    private LoginView loginView;
    private LoginInteractor loginInteractor;

    public LoginPresenterImpl(LoginView loginView) {
        this.loginView = loginView;
        this.loginInteractor = new LoginInteractorImpl();
    }

    //其他方法的实现
    ...
}
</code></pre><p>我们可以看到该类实现了LoginPresenter和LoginInteractor.OnLoginFinishedListener的接口,  并且在构造方法的参数为LoginView, 那么问题来了, <strong>为什么要传递LoginView类型的参数呢?</strong></p>
<p>我们刚才也看到了,在LoginView中定义了几个接口, 而在LoginActivity中有对这几个接口的实现, 所以传递这个参数, 是有利于LoginPresenterImpl类调用LoginActivity的实现方法, 用于界面上的显示, 这就达到了逻辑代码和显示代码的分离</p>
<p>好了,现在来看看是怎么实现LoginPresenter中的validateCredentials接口的吧</p>
<pre><code>@Override public void validateCredentials(String username, String password) {

    if (loginView != null) {
        loginView.showProgress();
    }

    loginInteractor.login(username, password, this);
}
</code></pre><p>看到这里,有同学该有疑问了,<strong>为什么在这个方法里我没看到实现帐号验证的具体逻辑呢?</strong></p>
<p>没错,这里不应该有帐号验证的具体逻辑代码,因为LoginPresenterImpl类充当的是任命者或者称中介者的身份, 中介者只负责联系<strong>界面类</strong>和<strong>具体实现逻辑代码的类</strong>,如果还不能理解,就想想房地产中介吧, 他们只负责联系买房者和卖房者, 其他的事都不管(抱歉, 我没有鄙视或看不起房地产中介人员的意思, 这里只是做个举例, 在此说声对不起).</p>
<p>我们看到代码中, 把接收到的username和password参数传递给了一个login方法, 该方法在LoginInteractor文件中, 我们再打开<strong>LoginInteractor.java</strong>文件</p>
<pre><code>public interface LoginInteractor {

    interface OnLoginFinishedListener {
        void onUsernameError();

        void onPasswordError();

        void onSuccess();
    }

    void login(String username, String password, OnLoginFinishedListener listener);

}
</code></pre><p>可以定义了一个login接口和一个OnLoginFinishedListener接口类, 返回LoginPresenterImpl.java文件可以很容易看到OnLoginFinishedListener接口类中接口的实现</p>
<pre><code>@Override public void onUsernameError() {
    if (loginView != null) {
        loginView.setUsernameError();
        loginView.hideProgress();
    }
}

@Override public void onPasswordError() {
    if (loginView != null) {
        loginView.setPasswordError();
        loginView.hideProgress();
    }
}

@Override public void onSuccess() {
    if (loginView != null) {
        loginView.navigateToHome();
    }
}
</code></pre><p>在这些接口的实现中同样只是调用LoginView中的接口,并没有具体的逻辑操作代码</p>
<p>在该类的构造方法中我们会发现, 这里实例化了一个<strong>LoginInteractorImpl</strong>对象, 我们现在打开LoginInteractorImpl.java文件</p>
<pre><code>public class LoginInteractorImpl implements LoginInteractor {

    @Override
    public void login(final String username, final String password, final OnLoginFinishedListener listener) {

        // Mock login. I&#39;m creating a handler to delay the answer a couple of seconds
        new Handler().postDelayed(new Runnable() {

            @Override public void run() {

                boolean error = false;
                if (TextUtils.isEmpty(username)){
                    listener.onUsernameError();
                    error = true;
                }
                if (TextUtils.isEmpty(password)){
                    listener.onPasswordError();
                    error = true;
                }
                if (!error){
                    listener.onSuccess();
                }
            }
        }, 2000);
    }
}
</code></pre><p>我们可以看到该类实现了LoginInteractor中的login接口, 并且在login方法中进行了具体的逻辑处理, 如果验证通过, 调用onSuccess接口</p>
<p><strong>好了,整个登录流程讲完了,最后我们再来梳理一下整个流程:</strong></p>
<blockquote>
<ol>
<li>在LoginActivity中,通过LoginPresenter接口类中的validateCredentials接口,把username和password传递给LoginPresenter的实现类LoginPresenterImpl</li>
<li>LoginPresenterImpl类再通过LoginInteractor接口类中的login接口, 把username和password传递给LoginInteractor的实现类LoginInteractorImpl</li>
<li>在LoginInteractorImpl类中进行具体的逻辑处理, 如果验证通过,则调用LoginInteractor.OnLoginFinishedListener接口类中的onSuccess接口, 即调用了LoginPresenterImpl类中实现的onSuccess接口</li>
<li>LoginPresenterImpl类中实现的onSuccess接口中,调用了LoginView接口类中的navigateToHome接口,即调用了LoginActivity类中实现的navigateToHome接口</li>
<li>最后在navigateToHome接口中实现Activity的跳转,跳转到MainActivity</li>
</ol>
</blockquote>
<p><strong>流程图如下:</strong><br><img src="http://www.bit100.com/.zhongzilu/image/flow_chart.png" alt="Alt text"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在MVP开发模式中, Activity只负责界面的显示和跳转相关的操作, 具体的逻辑处理通过调用接口来传递给Presenter(中介者) 既不做界面显示的操作,也不做具体的逻辑处理操作, 具体的逻辑处理通过调用接口,让Interactor即交互类来完成</p>
<p>交互类的逻辑处理结果,通过调用Presenter中实现的接口, 再由Presenter要实现的接口中调用Activity中实现的接口来进行UI的显示或界面跳转</p>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>好了,<code>安卓开发 MVP之初体验</code>讲完了,写了那么多,希望大家能够看懂了,如果还有什么问题,可以问我<a href="http://ask.android-studio.org/?/people/zhongzilu" target="_blank" rel="external">Follow Me</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[【微表情心理学】耳朵的秘密]]></title>
      <url>http://zhongzilu.github.io/2016/05/10/%E3%80%90%E5%BE%AE%E8%A1%A8%E6%83%85%E5%BF%83%E7%90%86%E5%AD%A6%E3%80%91%E8%80%B3%E6%9C%B5%E7%9A%84%E7%A7%98%E5%AF%86/</url>
      <content type="html"><![CDATA[<blockquote>
<p>如果你仔细观察我们的耳朵，你会发现耳朵就像一个倒置的胎儿。他的头部朝下，臀部朝上。耳朵可以被看做事他人体的缩小版</p>
</blockquote>
<h3 id="耳朵大小某种程度上体现一个人的生命力和思想深度"><a href="#耳朵大小某种程度上体现一个人的生命力和思想深度" class="headerlink" title="耳朵大小某种程度上体现一个人的生命力和思想深度"></a>耳朵大小某种程度上体现一个人的生命力和思想深度</h3><p>通常来说，一个人的耳朵越大，他就越充满激情和活力，他多半精力旺盛，但也很容易脾气暴躁，比如美国前总统比尔·克林顿。耳朵中等大小的人，多半思想冷静、理性而客观，比如法国影星苏菲·玛索。而小耳朵的人，多半具有很强的观察力，而且适应能力很强，对待事情也比较有耐心</p>
<h3 id="耳朵反映一个人的性格特征"><a href="#耳朵反映一个人的性格特征" class="headerlink" title="耳朵反映一个人的性格特征"></a>耳朵反映一个人的性格特征</h3><p>大耳朵的人多半活力四射，行动力和执行力比较强，有个性，有思想</p>
<p>耳朵外形美观的人，内心相对平静，富有想象力，具有坚持不懈的品质和乐于竞争的精神</p>
<p>耳轮在起始处粗壮，而在走向中间的部位是剧烈变细的人多半比较顽固，敏感，情绪不稳定，容易消沉</p>
<p>耳朵外形粗糙，粗笨或过宽，过厚，此人往往比较麻木缺乏感情，思维不受控制，甚至有时还很野蛮，具有强烈的攻击性</p>
<p>中等大小的耳朵为正常耳朵，虽不具备丰富想象力和热情，但感情稳定，不易出现波动，而且做事更加理性，逻辑性思维很强，做事前喜欢深思熟虑，权衡再三，与人交往时不会无理争辩，而是做出让人信服的言论。总之此类人为人处世相对稳重，并且善于处理工作和生活之间的关系</p>
<p>小耳朵通常缺乏强烈的野心，自信心，想象力和创造性，但他们多半反应迅速，身体灵敏，并且具有极强的专注力和观察力。性情上，一般较为敏感，更容易闷闷不乐，郁郁寡欢，也常陷入悲观局面。但他们行事严谨，很少出现差错，往往也会取得令人骄傲的成绩</p>
<h3 id="扯耳朵或摸耳垂"><a href="#扯耳朵或摸耳垂" class="headerlink" title="扯耳朵或摸耳垂"></a>扯耳朵或摸耳垂</h3><p>在谈话中，很多人习惯做出扯耳朵或者摸耳垂的动作，通常这种动作表示他们试图打断对方说话。</p>
<p>摸耳垂的动作是一种自我触摸，自我安慰的行为。通常当人们对谈话内容不感兴趣而产生乏味，无趣的情绪甚至对内容反感时会出现此举动。一方面是想要打断对方的潜意识，另一方面是借此来安抚自己消除内心的浮躁和不安。</p>
<p>当人们紧张、内心焦虑不安、说谎、表示反对意见时也会有此举动</p>
<h3 id="咬嘴唇或隐藏嘴唇"><a href="#咬嘴唇或隐藏嘴唇" class="headerlink" title="咬嘴唇或隐藏嘴唇"></a>咬嘴唇或隐藏嘴唇</h3><p>出现此举通常是由于出现某种压力或紧张情绪。这是一种消极情绪</p>
<p>突然收拢嘴唇或嘟起嘴，如果在谈话时出现此举动，通常说明此人对所讲话的内容在心理上出现了反对意见或是不完全认可的态度，此时他正在思考怎么样转换正在谈论的话题或者是准备提出自己的不同意见</p>
<blockquote>
<p>作者：zhongzilu</p>
</blockquote>
]]></content>
      
        
    </entry>
    
  
  
</search>
